{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/JavaIO流.md","hash":"45e6644b4147633dc0c0fa3235450a0136179c85","modified":1614167520128},{"_id":"source/_posts/Java文件读取.md","hash":"89a13a7ee5a9b83b5ce3a8807438fcf4d34377c9","modified":1614167520128},{"_id":"source/_posts/Java日志配置.md","hash":"c138a15fe3a3e09d02ec070c193a1ec2944bed7e","modified":1614167520128},{"_id":"source/_posts/Java程序执行.md","hash":"43376f1fb977cab48a3188c5e7f6b4b7a3f0bb5e","modified":1614167520128},{"_id":"source/_posts/Java设计模式.md","hash":"3dcb9ccafbd88516916f2a1f9d8394cdb54250e7","modified":1614167520129},{"_id":"source/_posts/类加载与生命周期.md","hash":"93408df7c8ee0b3d61334daa86ef1716d6751cb3","modified":1614167520129},{"_id":"source/about/index.md","hash":"da4a9ab5b57a6b3d9feb83763dda6aa5ad0808df","modified":1614167520129},{"_id":"source/categories/index.md","hash":"2dadc6129c12bf75d1073b17a3aaeffbcc760d81","modified":1614167520129},{"_id":"source/contact/index.md","hash":"cce75197ff5ccf58b8b9964fe280c4b3784ee859","modified":1614167879897},{"_id":"source/friends/index.md","hash":"bfe7f0693d8959b62ee297baee5b803c4a2748be","modified":1614167895075},{"_id":"source/tags/index.md","hash":"ad623cb64270a157e905304b3c32d98b026bb268","modified":1614167520129},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1614136434449},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1614136434450},{"_id":"themes/hexo-theme-matery/README.md","hash":"0366f3d50b18d095b0581e7b5974e3283d693884","modified":1614136434450},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"a1e060bb4cf2ccca5cad12d02cc3c37f8028fdfb","modified":1614136434450},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"9f0bda610f9f17b45c395f9670aa43e1cf886124","modified":1614175577590},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1614136434451},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1614136434451},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"ae34ac0e175c3037675722e436637efbceea32f0","modified":1614136434451},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"9c8ca67377211e5d60fdde272a975faa9a91a22a","modified":1614136434451},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1614136434456},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1614136434456},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1614136434456},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"cff60f87f69155707f3a33731c7fac945cf7cd93","modified":1614136434456},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"51e5369ec6b017cc702a8d957fc052c59dd4c3d7","modified":1614136434456},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"4dc6f08e7709cc04e886be72dbf0d06469f0effc","modified":1614136434456},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"4bfb9e946a90724fc8a902efe404c7b20549a38c","modified":1614136434456},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1614136434456},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1614136434456},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1614136434456},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1614136434457},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1614136434451},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"aef6edeeb11209831a11d8c7f5d59992e2573335","modified":1614136434451},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1614136434451},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1614136434451},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"c35e4254ff0738878f65251a657b4fdcafc4b270","modified":1614136434451},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1614136434451},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1614136434451},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"3be24e4c370671eda53bdfd99fb748f4a22948ba","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"f8438ac80df005934a330b029de292d26f0b6ecb","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"85f0ef1c390694a1661e77f44a3ed76555099385","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"738b83cd90fe1b26971d803fc89c56193323da1e","modified":1614136434452},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"cb0cb452be1cd1857ba600f04025b506f3b6fc79","modified":1614136434453},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1614136434453},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1614136434453},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1614136434453},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"3ff94aff01936242a9f4e1f31adb9b43bfab8d53","modified":1614136434453},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"7933979c2092654a9c1038ff30495505d7d88f2d","modified":1614136434453},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1614136434453},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1614136434453},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1614136434453},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"045f3aaade1dc6749a1f824b0405b5fdb9e041e4","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1614136434454},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1614136434455},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"a0e002377af2a7f7e4da6d9a644de97adb035925","modified":1614136434455},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1614136434457},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1614136434457},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"a630f6e8643904073dce9eada57b5c16c4dba5e2","modified":1614136434457},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1614136434457},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1614136434457},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1614136434458},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1614136434458},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1614136434510},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1614136434516},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1614136434528},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1614136434528},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1614136434458},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1614136434458},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1614136434458},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1614136434459},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1614136434459},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1614136434485},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1614136434485},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1614136434485},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1614136434485},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1614136434485},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1614136434485},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1614136434485},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1614136434485},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1614136434486},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1614136434486},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1614136434494},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1614136434495},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1614136434496},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1614136434496},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1614136434496},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1614136434499},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1614136434502},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1614136434502},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1614136434502},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1614136434502},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1614136434502},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1614136434504},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1614136434504},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1614136434508},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1614136434518},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1614136434520},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1614136434521},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1614136434521},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1614136434523},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1614136434524},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1614136434524},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1614136434525},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1614136434525},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1614136434526},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1614136434527},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1614136434527},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1614136434528},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1614136434528},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1614136434471},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1614136434472},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1614136434472},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1614136434472},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1614136434497},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1614136434498},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1614136434498},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1614136434498},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1614136434498},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1614136434498},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1614136434498},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1614136434498},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1614136434498},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1614136434499},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1614136434502},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1614136434503},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1614136434503},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1614136434503},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1614136434503},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1614136434503},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1614136434504},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1614136434487},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1614136434496},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1614136434497},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1614136434508},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1614136434511},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1614136434513},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1614136434513},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1614136434518},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1614136434518},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1614136434519},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1614136434520},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1614136434520},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1614136434522},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1614136434522},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1614136434522},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1614136434523},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1614136434525},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1614136434526},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1614136434527},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1614136434460},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1614136434461},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1614136434470},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1614136434470},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1614136434470},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1614136434484},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1614136434485},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1614136434517},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1614136434495},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1614136434500},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1614136434501},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1614136434510},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1614136434512},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1614136434515},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1614136434516},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1614136434472},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1614136434474},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1614136434484},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1614136434515},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1614136434508},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1614136434468},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1614136434493},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1614136434482},{"_id":"public/search.xml","hash":"45e761aa3f1771bb0f5695b366f98cfe9f303b54","modified":1614175585729},{"_id":"public/about/index.html","hash":"823cac8622a667d10b82643f001295242a9a90db","modified":1614175585729},{"_id":"public/categories/index.html","hash":"e2a333f3afd0f569444e6b8d84186cce5f196a94","modified":1614175585729},{"_id":"public/contact/index.html","hash":"48067ff7e7ea1d94a0a2d159ea3188477b55238b","modified":1614175585729},{"_id":"public/friends/index.html","hash":"cf9d4a2179ec2645a31e270b8b8f18d1df891f57","modified":1614175585729},{"_id":"public/tags/index.html","hash":"92e410cabfde3d2e824b4ec8a7636f79438dce62","modified":1614175585729},{"_id":"public/2021/02/24/java-she-ji-mo-shi/index.html","hash":"364f38aeaaed17067d7b9ce5a14ad60f7741a676","modified":1614175585729},{"_id":"public/2021/02/24/lei-jia-zai-yu-sheng-ming-zhou-qi/index.html","hash":"d936b728744512de7f2a5d9386a74a933aad4223","modified":1614175585729},{"_id":"public/2021/02/24/javaio-liu/index.html","hash":"a85da0bb0f82f3176929b435a06b3f05e4ac9b52","modified":1614175585729},{"_id":"public/2021/02/24/java-wen-jian-du-qu/index.html","hash":"399ea4aa3a587f7597c8ea464cf2a74b20b50c11","modified":1614175585729},{"_id":"public/2021/02/24/java-ri-zhi-pei-zhi/index.html","hash":"9bfe4ca8ddd225ccf5c2c3bee7fab6a39072d5e2","modified":1614175585729},{"_id":"public/2021/02/24/java-cheng-xu-zhi-xing/index.html","hash":"be0aa302ea01e9200e0ee8c6c277f27ba37adf2a","modified":1614175585729},{"_id":"public/archives/index.html","hash":"df0d665ac6e3feea7fc76882b898a2077ab1caec","modified":1614175585729},{"_id":"public/archives/2021/index.html","hash":"43f3022f6c58b1eee81d3f114daa557577ae4571","modified":1614175585729},{"_id":"public/archives/2021/02/index.html","hash":"aa1c28b0f82c3565a1ae3935f101e7380788076d","modified":1614175585729},{"_id":"public/categories/Tech/index.html","hash":"dee6d151bccc16763d7a887221b43e015c5a9586","modified":1614175585729},{"_id":"public/index.html","hash":"3e19c54a2469bbb6919991c2b21fa140df1fd72e","modified":1614175585729},{"_id":"public/tags/Java/index.html","hash":"458acb5ceb80b4af5495fd5f498f670d81f355a7","modified":1614175585729},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1614175585729},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1614175585729},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1614175585729},{"_id":"public/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1614175585729},{"_id":"public/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1614175585729},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1614175585729},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1614175585729},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1614175585729},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1614175585729},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1614175585729},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1614175585729},{"_id":"public/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1614175585729},{"_id":"public/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1614175585729},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1614175585729},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1614175585729},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1614175585729},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1614175585729},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1614175585729},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1614175585729},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1614175585729},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1614175585729},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1614175585729},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1614175585729},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1614175585729},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1614175585729},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1614175585729},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1614175585729},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1614175585729},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1614175585729},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1614175585729},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1614175585729},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1614175585729},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1614175585729},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1614175585729},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1614175585729},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1614175585729},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1614175585729},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1614175585729},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1614175585729},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1614175585729},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1614175585729},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1614175585729},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1614175585729},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1614175585729},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1614175585729},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1614175585729},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1614175585729},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1614175585729},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1614175585729},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1614175585729},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1614175585729},{"_id":"public/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1614175585729},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1614175585729},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1614175585729},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1614175585729},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1614175585729},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1614175585729},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1614175585729},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1614175585729},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1614175585729},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1614175585729},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1614175585729},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1614175585729},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1614175585729},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1614175585729},{"_id":"public/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1614175585729},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1614175585729},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1614175585729},{"_id":"public/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1614175585729},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1614175585729},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1614175585729},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1614175585729},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1614175585729},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1614175585729},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1614175585729},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1614175585729},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1614175585729},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1614175585729},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1614175585729},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1614175585729},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1614175585729},{"_id":"public/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1614175585729},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1614175585729},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1614175585729},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1614175585729},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1614175585729},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1614175585729},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1614175585729},{"_id":"public/css/matery.css","hash":"a630f6e8643904073dce9eada57b5c16c4dba5e2","modified":1614175585729},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1614175585729},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1614175585729},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1614175585729},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1614175585729},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1614175585729},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1614175585729},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1614175585729},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1614175585729},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1614175585729},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1614175585729},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1614175585729},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1614175585729},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1614175585729},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1614175585729},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1614175585729},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1614175585729},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1614175585729},{"_id":"public/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1614175585729},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1614175585729}],"Category":[{"name":"Tech","_id":"ckljiguah0004facs92qx6cut"}],"Data":[],"Page":[{"title":"about","date":"2020-12-15T16:20:36.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-12-15 16:20:36\ntype: about\nlayout: about\n---\n","updated":"2021-02-24T11:52:00.129Z","path":"about/index.html","comments":1,"_id":"ckljigu9z0000facsh0on5pgs","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2020-12-14T19:32:22.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-12-14 19:32:22\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2021-02-24T11:52:00.129Z","path":"categories/index.html","comments":1,"_id":"ckljiguac0002facs7atfhenh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"contact","date":"2021-02-24T11:56:38.000Z","type":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2021-02-24 11:56:38\ntype: contact\n---\n","updated":"2021-02-24T11:57:59.897Z","path":"contact/index.html","comments":1,"layout":"page","_id":"ckljigual0006facsgx599cln","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"friends","date":"2021-02-24T11:56:46.000Z","type":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2021-02-24 11:56:46\ntype: friends\n---\n","updated":"2021-02-24T11:58:15.075Z","path":"friends/index.html","comments":1,"layout":"page","_id":"ckljiguap0008facse3i31nh1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-12-14T19:34:39.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-12-14 19:34:39\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2021-02-24T11:52:00.129Z","path":"tags/index.html","comments":1,"_id":"ckljiguar000afacsfl0u67ly","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"JavaIO流","author":"Semon","top":true,"_content":"# IO流相关\n## Java IO流分类：\n按流向分类： \n+ 输入流：从文件中读到程序中\n+ 输出流：从程序中输出到文件中\n\n按操作对象分配：\n+ 字节流：以字节为最小单位进行数据读写\n+ 字符流：以字符为最小单位进行数据读写\n\n按功能分类：\n+ 节点流：直接与数据源相连进行读写操作\n+ 处理流：在节点流上进行套接，实现节点流读写功能增强\n\nIO流的设计模式为装饰设计模式，节点流为原始流，实现流的基本功能，处理流包装节点流，进行功能增强，如编码、缓冲等；\n\n## 常用IO流\n### 输入流\n+ InputStream/Reader：抽象类，所有输入流的父类，前者为字节流，后者为字符流\n    + FileInputStream/FileReader：文件输入流，接受String型文件路径；\n        + BufferedInputStream/BufferedReader：缓冲输入流，接受一个文件输入流对象，对输入流进行功能增强\n        + InputStreamReader：转换输入流，接受一个InputStream输入流对象及String对象指定字符集，实现字节流向字符流的转换，实际上FileReader是通过转换流来进行实现的；\n+ 常用方法：\n    + int read();：从输入流中读取单个字节，返回所读取的字节数据（字节数据可直接转换为int类型）。\n    + int read(byte[] b)从输入流中最多读取b.length个字节的数据，并将其存储在字节数组b中，返回实际读取的字节数。\n    + int read(byte[] b,int off,int len); 从输入流中最多读取len个字节的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字节数。\n    + int read(); 从输入流中读取单个字符，返回所读取的字符数据（字节数据可直接转换为int类型）。\n    + int read(char[] b)从输入流中最多读取b.length个字符的数据，并将其存储在字节数组b中，返回实际读取的字符数。\n    + int read(char[] b,int off,int len); 从输入流中最多读取len个字符的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字符数。\n\n### 输出流\n+ OutputStream/Writer：抽象类，所有输出流的父类，前者为字节流，后者为字符流\n    + FileOutputStream/FileWriter：文件输出流，接受String型文件路径；\n        + BufferedOutputStream/BufferedWriter：缓冲输入流，接受一个文件输入流对象，对输入流进行功能增强\n        + OutputStreamReader：转换输入流，接受一个OutputStream输入流对象及String对象指定字符集，实现字节流向字符流的转换，实际上FileWriter是通过转换流来进行实现的；\n+ 常用方法：\n    + void write(int c); 将指定的字节/字符输出到输出流中，其中c即可以代表字节，也可以代表字符。\n    + void write(byte[]/char[] buf); 将字节数组/字符数组中的数据输出到指定输出流中。\n    + void write(byte[]/char[] buf, int off,int len ); 将字节数组/字符数组中从off位置开始，长度为len的字节/字符输出到输出流中。\n    + void write(String str); 将str字符串里包含的字符输出到指定输出流中。\n    + void write (String str, int off, int len); 将str字符串里面从off位置开始，长度为len的字符输出到指定输出流中。\n","source":"_posts/JavaIO流.md","raw":"---\ntitle: JavaIO流\ncategories: Tech\ntags: Java\nauthor: Semon\ntop: true\n---\n# IO流相关\n## Java IO流分类：\n按流向分类： \n+ 输入流：从文件中读到程序中\n+ 输出流：从程序中输出到文件中\n\n按操作对象分配：\n+ 字节流：以字节为最小单位进行数据读写\n+ 字符流：以字符为最小单位进行数据读写\n\n按功能分类：\n+ 节点流：直接与数据源相连进行读写操作\n+ 处理流：在节点流上进行套接，实现节点流读写功能增强\n\nIO流的设计模式为装饰设计模式，节点流为原始流，实现流的基本功能，处理流包装节点流，进行功能增强，如编码、缓冲等；\n\n## 常用IO流\n### 输入流\n+ InputStream/Reader：抽象类，所有输入流的父类，前者为字节流，后者为字符流\n    + FileInputStream/FileReader：文件输入流，接受String型文件路径；\n        + BufferedInputStream/BufferedReader：缓冲输入流，接受一个文件输入流对象，对输入流进行功能增强\n        + InputStreamReader：转换输入流，接受一个InputStream输入流对象及String对象指定字符集，实现字节流向字符流的转换，实际上FileReader是通过转换流来进行实现的；\n+ 常用方法：\n    + int read();：从输入流中读取单个字节，返回所读取的字节数据（字节数据可直接转换为int类型）。\n    + int read(byte[] b)从输入流中最多读取b.length个字节的数据，并将其存储在字节数组b中，返回实际读取的字节数。\n    + int read(byte[] b,int off,int len); 从输入流中最多读取len个字节的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字节数。\n    + int read(); 从输入流中读取单个字符，返回所读取的字符数据（字节数据可直接转换为int类型）。\n    + int read(char[] b)从输入流中最多读取b.length个字符的数据，并将其存储在字节数组b中，返回实际读取的字符数。\n    + int read(char[] b,int off,int len); 从输入流中最多读取len个字符的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字符数。\n\n### 输出流\n+ OutputStream/Writer：抽象类，所有输出流的父类，前者为字节流，后者为字符流\n    + FileOutputStream/FileWriter：文件输出流，接受String型文件路径；\n        + BufferedOutputStream/BufferedWriter：缓冲输入流，接受一个文件输入流对象，对输入流进行功能增强\n        + OutputStreamReader：转换输入流，接受一个OutputStream输入流对象及String对象指定字符集，实现字节流向字符流的转换，实际上FileWriter是通过转换流来进行实现的；\n+ 常用方法：\n    + void write(int c); 将指定的字节/字符输出到输出流中，其中c即可以代表字节，也可以代表字符。\n    + void write(byte[]/char[] buf); 将字节数组/字符数组中的数据输出到指定输出流中。\n    + void write(byte[]/char[] buf, int off,int len ); 将字节数组/字符数组中从off位置开始，长度为len的字节/字符输出到输出流中。\n    + void write(String str); 将str字符串里包含的字符输出到指定输出流中。\n    + void write (String str, int off, int len); 将str字符串里面从off位置开始，长度为len的字符输出到指定输出流中。\n","slug":"JavaIO流","published":1,"date":"2021-02-24T11:52:00.128Z","updated":"2021-02-24T11:52:00.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckljigua50001facs9jbtbsv5","content":"<h1 id=\"IO流相关\"><a href=\"#IO流相关\" class=\"headerlink\" title=\"IO流相关\"></a>IO流相关</h1><h2 id=\"Java-IO流分类：\"><a href=\"#Java-IO流分类：\" class=\"headerlink\" title=\"Java IO流分类：\"></a>Java IO流分类：</h2><p>按流向分类： </p>\n<ul>\n<li>输入流：从文件中读到程序中</li>\n<li>输出流：从程序中输出到文件中</li>\n</ul>\n<p>按操作对象分配：</p>\n<ul>\n<li>字节流：以字节为最小单位进行数据读写</li>\n<li>字符流：以字符为最小单位进行数据读写</li>\n</ul>\n<p>按功能分类：</p>\n<ul>\n<li>节点流：直接与数据源相连进行读写操作</li>\n<li>处理流：在节点流上进行套接，实现节点流读写功能增强</li>\n</ul>\n<p>IO流的设计模式为装饰设计模式，节点流为原始流，实现流的基本功能，处理流包装节点流，进行功能增强，如编码、缓冲等；</p>\n<h2 id=\"常用IO流\"><a href=\"#常用IO流\" class=\"headerlink\" title=\"常用IO流\"></a>常用IO流</h2><h3 id=\"输入流\"><a href=\"#输入流\" class=\"headerlink\" title=\"输入流\"></a>输入流</h3><ul>\n<li>InputStream/Reader：抽象类，所有输入流的父类，前者为字节流，后者为字符流<ul>\n<li>FileInputStream/FileReader：文件输入流，接受String型文件路径；<ul>\n<li>BufferedInputStream/BufferedReader：缓冲输入流，接受一个文件输入流对象，对输入流进行功能增强</li>\n<li>InputStreamReader：转换输入流，接受一个InputStream输入流对象及String对象指定字符集，实现字节流向字符流的转换，实际上FileReader是通过转换流来进行实现的；</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>常用方法：<ul>\n<li>int read();：从输入流中读取单个字节，返回所读取的字节数据（字节数据可直接转换为int类型）。</li>\n<li>int read(byte[] b)从输入流中最多读取b.length个字节的数据，并将其存储在字节数组b中，返回实际读取的字节数。</li>\n<li>int read(byte[] b,int off,int len); 从输入流中最多读取len个字节的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字节数。</li>\n<li>int read(); 从输入流中读取单个字符，返回所读取的字符数据（字节数据可直接转换为int类型）。</li>\n<li>int read(char[] b)从输入流中最多读取b.length个字符的数据，并将其存储在字节数组b中，返回实际读取的字符数。</li>\n<li>int read(char[] b,int off,int len); 从输入流中最多读取len个字符的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字符数。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"输出流\"><a href=\"#输出流\" class=\"headerlink\" title=\"输出流\"></a>输出流</h3><ul>\n<li>OutputStream/Writer：抽象类，所有输出流的父类，前者为字节流，后者为字符流<ul>\n<li>FileOutputStream/FileWriter：文件输出流，接受String型文件路径；<ul>\n<li>BufferedOutputStream/BufferedWriter：缓冲输入流，接受一个文件输入流对象，对输入流进行功能增强</li>\n<li>OutputStreamReader：转换输入流，接受一个OutputStream输入流对象及String对象指定字符集，实现字节流向字符流的转换，实际上FileWriter是通过转换流来进行实现的；</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>常用方法：<ul>\n<li>void write(int c); 将指定的字节/字符输出到输出流中，其中c即可以代表字节，也可以代表字符。</li>\n<li>void write(byte[]/char[] buf); 将字节数组/字符数组中的数据输出到指定输出流中。</li>\n<li>void write(byte[]/char[] buf, int off,int len ); 将字节数组/字符数组中从off位置开始，长度为len的字节/字符输出到输出流中。</li>\n<li>void write(String str); 将str字符串里包含的字符输出到指定输出流中。</li>\n<li>void write (String str, int off, int len); 将str字符串里面从off位置开始，长度为len的字符输出到指定输出流中。</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"IO流相关\"><a href=\"#IO流相关\" class=\"headerlink\" title=\"IO流相关\"></a>IO流相关</h1><h2 id=\"Java-IO流分类：\"><a href=\"#Java-IO流分类：\" class=\"headerlink\" title=\"Java IO流分类：\"></a>Java IO流分类：</h2><p>按流向分类： </p>\n<ul>\n<li>输入流：从文件中读到程序中</li>\n<li>输出流：从程序中输出到文件中</li>\n</ul>\n<p>按操作对象分配：</p>\n<ul>\n<li>字节流：以字节为最小单位进行数据读写</li>\n<li>字符流：以字符为最小单位进行数据读写</li>\n</ul>\n<p>按功能分类：</p>\n<ul>\n<li>节点流：直接与数据源相连进行读写操作</li>\n<li>处理流：在节点流上进行套接，实现节点流读写功能增强</li>\n</ul>\n<p>IO流的设计模式为装饰设计模式，节点流为原始流，实现流的基本功能，处理流包装节点流，进行功能增强，如编码、缓冲等；</p>\n<h2 id=\"常用IO流\"><a href=\"#常用IO流\" class=\"headerlink\" title=\"常用IO流\"></a>常用IO流</h2><h3 id=\"输入流\"><a href=\"#输入流\" class=\"headerlink\" title=\"输入流\"></a>输入流</h3><ul>\n<li>InputStream/Reader：抽象类，所有输入流的父类，前者为字节流，后者为字符流<ul>\n<li>FileInputStream/FileReader：文件输入流，接受String型文件路径；<ul>\n<li>BufferedInputStream/BufferedReader：缓冲输入流，接受一个文件输入流对象，对输入流进行功能增强</li>\n<li>InputStreamReader：转换输入流，接受一个InputStream输入流对象及String对象指定字符集，实现字节流向字符流的转换，实际上FileReader是通过转换流来进行实现的；</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>常用方法：<ul>\n<li>int read();：从输入流中读取单个字节，返回所读取的字节数据（字节数据可直接转换为int类型）。</li>\n<li>int read(byte[] b)从输入流中最多读取b.length个字节的数据，并将其存储在字节数组b中，返回实际读取的字节数。</li>\n<li>int read(byte[] b,int off,int len); 从输入流中最多读取len个字节的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字节数。</li>\n<li>int read(); 从输入流中读取单个字符，返回所读取的字符数据（字节数据可直接转换为int类型）。</li>\n<li>int read(char[] b)从输入流中最多读取b.length个字符的数据，并将其存储在字节数组b中，返回实际读取的字符数。</li>\n<li>int read(char[] b,int off,int len); 从输入流中最多读取len个字符的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字符数。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"输出流\"><a href=\"#输出流\" class=\"headerlink\" title=\"输出流\"></a>输出流</h3><ul>\n<li>OutputStream/Writer：抽象类，所有输出流的父类，前者为字节流，后者为字符流<ul>\n<li>FileOutputStream/FileWriter：文件输出流，接受String型文件路径；<ul>\n<li>BufferedOutputStream/BufferedWriter：缓冲输入流，接受一个文件输入流对象，对输入流进行功能增强</li>\n<li>OutputStreamReader：转换输入流，接受一个OutputStream输入流对象及String对象指定字符集，实现字节流向字符流的转换，实际上FileWriter是通过转换流来进行实现的；</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>常用方法：<ul>\n<li>void write(int c); 将指定的字节/字符输出到输出流中，其中c即可以代表字节，也可以代表字符。</li>\n<li>void write(byte[]/char[] buf); 将字节数组/字符数组中的数据输出到指定输出流中。</li>\n<li>void write(byte[]/char[] buf, int off,int len ); 将字节数组/字符数组中从off位置开始，长度为len的字节/字符输出到输出流中。</li>\n<li>void write(String str); 将str字符串里包含的字符输出到指定输出流中。</li>\n<li>void write (String str, int off, int len); 将str字符串里面从off位置开始，长度为len的字符输出到指定输出流中。</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Java读取文件","author":"Semon","_content":"\n# Java读取文件\n## 常用获取文件路径方法\n\n```java\n//该方法获取的路径为class文件当前路径，后面可接相对class文件的相对路径文件或classpath为根目录的绝对路径；\ngetClass.getResource():\n\n//该方法获取的路径为classpath的根目录，即'/'，故其后只能跟以非'/'开头的相对路径；\ngetClass().getClassLoader().getResource():\n\n//获取执行jar操作系统路径\nSystem.getProperty(\"user.dir\")：\n```","source":"_posts/Java文件读取.md","raw":"---\ntitle: Java读取文件\ncategories: Tech\ntags: Java\nauthor: Semon\n---\n\n# Java读取文件\n## 常用获取文件路径方法\n\n```java\n//该方法获取的路径为class文件当前路径，后面可接相对class文件的相对路径文件或classpath为根目录的绝对路径；\ngetClass.getResource():\n\n//该方法获取的路径为classpath的根目录，即'/'，故其后只能跟以非'/'开头的相对路径；\ngetClass().getClassLoader().getResource():\n\n//获取执行jar操作系统路径\nSystem.getProperty(\"user.dir\")：\n```","slug":"Java文件读取","published":1,"date":"2021-02-24T11:52:00.128Z","updated":"2021-02-24T11:52:00.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckljiguad0003facs8epza1gz","content":"<h1 id=\"Java读取文件\"><a href=\"#Java读取文件\" class=\"headerlink\" title=\"Java读取文件\"></a>Java读取文件</h1><h2 id=\"常用获取文件路径方法\"><a href=\"#常用获取文件路径方法\" class=\"headerlink\" title=\"常用获取文件路径方法\"></a>常用获取文件路径方法</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//该方法获取的路径为class文件当前路径，后面可接相对class文件的相对路径文件或classpath为根目录的绝对路径；</span>\ngetClass<span class=\"token punctuation\">.</span><span class=\"token function\">getResource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n<span class=\"token comment\">//该方法获取的路径为classpath的根目录，即'/'，故其后只能跟以非'/'开头的相对路径；</span>\n<span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n<span class=\"token comment\">//获取执行jar操作系统路径</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user.dir\"</span><span class=\"token punctuation\">)</span>：<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Java读取文件\"><a href=\"#Java读取文件\" class=\"headerlink\" title=\"Java读取文件\"></a>Java读取文件</h1><h2 id=\"常用获取文件路径方法\"><a href=\"#常用获取文件路径方法\" class=\"headerlink\" title=\"常用获取文件路径方法\"></a>常用获取文件路径方法</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//该方法获取的路径为class文件当前路径，后面可接相对class文件的相对路径文件或classpath为根目录的绝对路径；</span>\ngetClass<span class=\"token punctuation\">.</span><span class=\"token function\">getResource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n<span class=\"token comment\">//该方法获取的路径为classpath的根目录，即'/'，故其后只能跟以非'/'开头的相对路径；</span>\n<span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n<span class=\"token comment\">//获取执行jar操作系统路径</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user.dir\"</span><span class=\"token punctuation\">)</span>：<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"Java日志配置","author":"Semon","_content":"# Java日志配置\n## 常用日志类\n+ logger：Jdk内置，基本不用于生产环境\n+ log4j：apache提供，已于2015年停止更新，历史遗留项目仍在使用，最后版本为1.2.17\n+ log4j2：apache提供，log4j升级版本，性能较log4j提升10倍(官方说明)\n+ logback：log4j作者出走后重新开发，性能相对log4j有很大提升\n\n\n### log4j\nlog4j主要通过log4j.properties配置文件进行定义\n\n```bash\n#跟日志\n#info：配置日志输出级别\n#console：日志附加器，配置日志输出方式，可同时配置多个附加器名称，如不配置，则不生效\nlog4j.rootLogger=info,console\n\n#附加器可自定义名称，如log4j.appender.xxx中，xxx即为附加器名称，默认控制台为console、文件为file、滚动为rollfile\n#控制台附加器\nlog4j.appender.console = org.apache.log4j.ConsoleAppender\n#Target可配置System.out及System.error，error显示文字为红色\nlog4j.appender.console.Target = System.out\n#layout可分为：\n# HTMLLayrout--网页表格形式布局\n# SimpleLayout--简单布局，包含日志信息级别及日志信息字符串\n# PatternLayout--匹配器布局\nlog4j.appender.console.layout = org.apache.log4j.PatternLayout\n# ConversionPattern结合PatternLayout使用，配置PatternLayout布局格式\nlog4j.appender.console.layout.ConversionPattern = [%-5p][%d{yyyy-MM-dd HH:mm:ss}] %m%n\n\n#文件附加器\nlog4j.appender.file = org.apache.log4j.ConsoleAppender\nlog4j.appender.file.Target = /Users/semon/IdeaProjects/helloworld/jakartaee/log4j.log\nlog4j.appender.file.layout = org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern = [%-5p][%d{yyyy-MM-dd HH:mm:ss}] %m%n\n\n#滚动附加器\nlog4j.appender.rollfile = org.apache.log4j.ConsoleAppender\nlog4j.appender.rollfile.Target = System.out\nlog4j.appender.rollfile.layout = org.apache.log4j.PatternLayout\nlog4j.appender.rollfile.MaxFileSize= 10kb\nlog4j.appender.rollfile.layout.ConversionPattern = [%-5p][%d{yyyy-MM-dd HH:mm:ss}] %m%n\n```\n\n### log4j2\nlog4j2使用基本与log4j一致，通过xml配置文件来定义\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- status=\"TRACE\"这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。OFF则关闭log4j2自己的日志输出 -->\n<configuration status=\"OFF\">\n    <appenders>\n        <Console name=\"Console\" target=\"SYSTEM_OUT\">\n            <!--过滤器：控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->\n            <ThresholdFilter level=\"trace\" onMatch=\"ACCEPT\" onMismatch=\"DENY\"/>\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n\" />\n        </Console>\n        <!--append默认为false，每次清空日志文件  filename指定相对路径为项目根目录-->\n        <File name=\"log\" fileName=\"log/test.log\" append=\"true\">\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n\"/>\n        </File>\n        <!--指定日志滚动大小阈值为50M，超过大小文件进行压缩 -->\n        <RollingFile name=\"RollingFile\" fileName=\"logs/app.log\"\n                     filePattern=\"log/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz\">\n            <PatternLayout pattern=\"%d{yyyy-MM-dd 'at' HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n\"/>\n            <SizeBasedTriggeringPolicy size=\"50MB\"/>\n        </RollingFile>\n    </appenders>\n    <loggers>\n        <!-- 定义日志输出级别，默认为trace -->\n        <root level=\"trace\">\n            <!-- 定义启用的日志附加器 -->\n            <appender-ref ref=\"log\" />\n            <appender-ref ref=\"Console\" />\n        </root>\n        <!-- 指定特定类的日志配置 -->\n        <!-- additivity开启的话，由于这个logger也是满足root的，所以会被打印两遍。 不过root logger 的level是error，为什么Bar里面的trace信息也被打印两遍呢 -->\n        <logger name=\"com.zzstxx.log4j2.HelloWorld2\" level=\"warn\"\n                additivity=\"false\">\n            <appender-ref ref=\"Console\" />\n        </logger>\n        <!-- 设置指定包目录下的输出级别 -->\n        <!-- <logger name=\"com.zzstxx.log4j2\" level=\"warn\"\n            additivity=\"false\">\n            <appender-ref ref=\"Console\" />\n        </logger>s -->\n    </loggers>\n</configuration>\n```\n\n### logback\nlogback有三个核心模块logback-access、logback-core及logback-classic；其中logback-classic是log4j的升级版；可通过xml文件进行配置；\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n\n<!--\nscan=true ：自动加载xml配置文件，每隔scanPeriod进行一次扫描\ndebug=true ：是否打印logback内部日志\n-->\n<configuration scan=\"true\" scanPeriod=\"3 seconds\" DEBUG=\"true\">\n\n    <!--statusListener：监听logback内部信息-->\n    <statusListener class=\"ch.qos.logback.core.status.OnConsoleStatusListener\" />\n\n    <!--name=\"stdout\" 指定appender名称-->\n    <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <encoder>\n            <!--指定日志格式-->\n            <pattern>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\n            </pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n        <file>file.log</file>\n        <append>true</append>\n        <encoder>\n            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n\n            </pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"ROLLINGFILE\"\n              class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>mylog.txt</file>\n        <rollingPolicy\n                class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\">\n            <!-- rollover daily -->\n            <fileNamePattern>mylog-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>\n            <!-- 每个日志文件大小不超过100MB，在日志文件总大小不超过20GB的情况下保存60天，超出则清楚部分日志 -->\n            <maxFileSize>100MB</maxFileSize>\n            <maxHistory>60</maxHistory>\n            <totalSizeCap>20GB</totalSizeCap>\n        </rollingPolicy>\n        <encoder>\n            <pattern>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\n            </pattern>\n        </encoder>\n    </appender>\n    <!--appender-ref 指定启用附加器-->\n    <root level=\"INFO\">\n        <appender-ref ref=\"STDOUT\" />\n    </root>\n\n</configuration>\n```\n\n## sl4j规范\n代表Simple Logging Facade for Java。它提供了Java中所有日志框架的简单抽象。因此，它使用户能够使用单个依赖项处理任何日志框架；\n+ 使用SLF4J框架，可以在部署时迁移到所需的日志记录框架。\n+ Slf4J提供了对所有流行的日志框架的绑定，例如log4j，JUL，Simple logging和NOP。因此可以在部署时切换到任何这些流行的框架。\n+ 无论使用哪种绑定，SLF4J都支持参数化日志记录消息。\n+ 由于SLF4J将应用程序和日志记录框架分离，因此可以轻松编写独立于日志记录框架的应用程序。而无需担心用于编写应用程序的日志记录框架。\n+ SLF4J提供了一个简单的Java工具，称为迁移器。使用此工具，可以迁移现有项目，这些项目使用日志框架(如Jakarta Commons Logging(JCL)或log4j或Java.util.logging(JUL))到SLF4J。\n\nsl4j使用demo：\n\n```java\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\npublic class Test01 {\n\n\tpublic static void main(String[] args) {\n\t\t // 创建记录日志的对象\n\t\t //当需要更换日志实现jar时，仅需调整具体日志实现jar包及配置文件，代码不需要做变更\n        Logger log = LoggerFactory.getLogger(Test01.class);\n\n        log.debug(\"debug信息\");\n        log.info(\"info信息\");\n        log.warn(\"warn信息\");\n        log.error(\"error信息\");\n\t}\n\n}\n```","source":"_posts/Java日志配置.md","raw":"---\ntitle: Java日志配置\ncategories: Tech\ntags: Java\nauthor: Semon\n---\n# Java日志配置\n## 常用日志类\n+ logger：Jdk内置，基本不用于生产环境\n+ log4j：apache提供，已于2015年停止更新，历史遗留项目仍在使用，最后版本为1.2.17\n+ log4j2：apache提供，log4j升级版本，性能较log4j提升10倍(官方说明)\n+ logback：log4j作者出走后重新开发，性能相对log4j有很大提升\n\n\n### log4j\nlog4j主要通过log4j.properties配置文件进行定义\n\n```bash\n#跟日志\n#info：配置日志输出级别\n#console：日志附加器，配置日志输出方式，可同时配置多个附加器名称，如不配置，则不生效\nlog4j.rootLogger=info,console\n\n#附加器可自定义名称，如log4j.appender.xxx中，xxx即为附加器名称，默认控制台为console、文件为file、滚动为rollfile\n#控制台附加器\nlog4j.appender.console = org.apache.log4j.ConsoleAppender\n#Target可配置System.out及System.error，error显示文字为红色\nlog4j.appender.console.Target = System.out\n#layout可分为：\n# HTMLLayrout--网页表格形式布局\n# SimpleLayout--简单布局，包含日志信息级别及日志信息字符串\n# PatternLayout--匹配器布局\nlog4j.appender.console.layout = org.apache.log4j.PatternLayout\n# ConversionPattern结合PatternLayout使用，配置PatternLayout布局格式\nlog4j.appender.console.layout.ConversionPattern = [%-5p][%d{yyyy-MM-dd HH:mm:ss}] %m%n\n\n#文件附加器\nlog4j.appender.file = org.apache.log4j.ConsoleAppender\nlog4j.appender.file.Target = /Users/semon/IdeaProjects/helloworld/jakartaee/log4j.log\nlog4j.appender.file.layout = org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern = [%-5p][%d{yyyy-MM-dd HH:mm:ss}] %m%n\n\n#滚动附加器\nlog4j.appender.rollfile = org.apache.log4j.ConsoleAppender\nlog4j.appender.rollfile.Target = System.out\nlog4j.appender.rollfile.layout = org.apache.log4j.PatternLayout\nlog4j.appender.rollfile.MaxFileSize= 10kb\nlog4j.appender.rollfile.layout.ConversionPattern = [%-5p][%d{yyyy-MM-dd HH:mm:ss}] %m%n\n```\n\n### log4j2\nlog4j2使用基本与log4j一致，通过xml配置文件来定义\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- status=\"TRACE\"这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。OFF则关闭log4j2自己的日志输出 -->\n<configuration status=\"OFF\">\n    <appenders>\n        <Console name=\"Console\" target=\"SYSTEM_OUT\">\n            <!--过滤器：控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->\n            <ThresholdFilter level=\"trace\" onMatch=\"ACCEPT\" onMismatch=\"DENY\"/>\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n\" />\n        </Console>\n        <!--append默认为false，每次清空日志文件  filename指定相对路径为项目根目录-->\n        <File name=\"log\" fileName=\"log/test.log\" append=\"true\">\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n\"/>\n        </File>\n        <!--指定日志滚动大小阈值为50M，超过大小文件进行压缩 -->\n        <RollingFile name=\"RollingFile\" fileName=\"logs/app.log\"\n                     filePattern=\"log/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz\">\n            <PatternLayout pattern=\"%d{yyyy-MM-dd 'at' HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n\"/>\n            <SizeBasedTriggeringPolicy size=\"50MB\"/>\n        </RollingFile>\n    </appenders>\n    <loggers>\n        <!-- 定义日志输出级别，默认为trace -->\n        <root level=\"trace\">\n            <!-- 定义启用的日志附加器 -->\n            <appender-ref ref=\"log\" />\n            <appender-ref ref=\"Console\" />\n        </root>\n        <!-- 指定特定类的日志配置 -->\n        <!-- additivity开启的话，由于这个logger也是满足root的，所以会被打印两遍。 不过root logger 的level是error，为什么Bar里面的trace信息也被打印两遍呢 -->\n        <logger name=\"com.zzstxx.log4j2.HelloWorld2\" level=\"warn\"\n                additivity=\"false\">\n            <appender-ref ref=\"Console\" />\n        </logger>\n        <!-- 设置指定包目录下的输出级别 -->\n        <!-- <logger name=\"com.zzstxx.log4j2\" level=\"warn\"\n            additivity=\"false\">\n            <appender-ref ref=\"Console\" />\n        </logger>s -->\n    </loggers>\n</configuration>\n```\n\n### logback\nlogback有三个核心模块logback-access、logback-core及logback-classic；其中logback-classic是log4j的升级版；可通过xml文件进行配置；\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n\n<!--\nscan=true ：自动加载xml配置文件，每隔scanPeriod进行一次扫描\ndebug=true ：是否打印logback内部日志\n-->\n<configuration scan=\"true\" scanPeriod=\"3 seconds\" DEBUG=\"true\">\n\n    <!--statusListener：监听logback内部信息-->\n    <statusListener class=\"ch.qos.logback.core.status.OnConsoleStatusListener\" />\n\n    <!--name=\"stdout\" 指定appender名称-->\n    <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <encoder>\n            <!--指定日志格式-->\n            <pattern>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\n            </pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n        <file>file.log</file>\n        <append>true</append>\n        <encoder>\n            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n\n            </pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"ROLLINGFILE\"\n              class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>mylog.txt</file>\n        <rollingPolicy\n                class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\">\n            <!-- rollover daily -->\n            <fileNamePattern>mylog-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>\n            <!-- 每个日志文件大小不超过100MB，在日志文件总大小不超过20GB的情况下保存60天，超出则清楚部分日志 -->\n            <maxFileSize>100MB</maxFileSize>\n            <maxHistory>60</maxHistory>\n            <totalSizeCap>20GB</totalSizeCap>\n        </rollingPolicy>\n        <encoder>\n            <pattern>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\n            </pattern>\n        </encoder>\n    </appender>\n    <!--appender-ref 指定启用附加器-->\n    <root level=\"INFO\">\n        <appender-ref ref=\"STDOUT\" />\n    </root>\n\n</configuration>\n```\n\n## sl4j规范\n代表Simple Logging Facade for Java。它提供了Java中所有日志框架的简单抽象。因此，它使用户能够使用单个依赖项处理任何日志框架；\n+ 使用SLF4J框架，可以在部署时迁移到所需的日志记录框架。\n+ Slf4J提供了对所有流行的日志框架的绑定，例如log4j，JUL，Simple logging和NOP。因此可以在部署时切换到任何这些流行的框架。\n+ 无论使用哪种绑定，SLF4J都支持参数化日志记录消息。\n+ 由于SLF4J将应用程序和日志记录框架分离，因此可以轻松编写独立于日志记录框架的应用程序。而无需担心用于编写应用程序的日志记录框架。\n+ SLF4J提供了一个简单的Java工具，称为迁移器。使用此工具，可以迁移现有项目，这些项目使用日志框架(如Jakarta Commons Logging(JCL)或log4j或Java.util.logging(JUL))到SLF4J。\n\nsl4j使用demo：\n\n```java\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\npublic class Test01 {\n\n\tpublic static void main(String[] args) {\n\t\t // 创建记录日志的对象\n\t\t //当需要更换日志实现jar时，仅需调整具体日志实现jar包及配置文件，代码不需要做变更\n        Logger log = LoggerFactory.getLogger(Test01.class);\n\n        log.debug(\"debug信息\");\n        log.info(\"info信息\");\n        log.warn(\"warn信息\");\n        log.error(\"error信息\");\n\t}\n\n}\n```","slug":"Java日志配置","published":1,"date":"2021-02-24T11:52:00.128Z","updated":"2021-02-24T11:52:00.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckljiguam0007facsdbad4yti","content":"<h1 id=\"Java日志配置\"><a href=\"#Java日志配置\" class=\"headerlink\" title=\"Java日志配置\"></a>Java日志配置</h1><h2 id=\"常用日志类\"><a href=\"#常用日志类\" class=\"headerlink\" title=\"常用日志类\"></a>常用日志类</h2><ul>\n<li>logger：Jdk内置，基本不用于生产环境</li>\n<li>log4j：apache提供，已于2015年停止更新，历史遗留项目仍在使用，最后版本为1.2.17</li>\n<li>log4j2：apache提供，log4j升级版本，性能较log4j提升10倍(官方说明)</li>\n<li>logback：log4j作者出走后重新开发，性能相对log4j有很大提升</li>\n</ul>\n<h3 id=\"log4j\"><a href=\"#log4j\" class=\"headerlink\" title=\"log4j\"></a>log4j</h3><p>log4j主要通过log4j.properties配置文件进行定义</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#跟日志</span>\n<span class=\"token comment\">#info：配置日志输出级别</span>\n<span class=\"token comment\">#console：日志附加器，配置日志输出方式，可同时配置多个附加器名称，如不配置，则不生效</span>\nlog4j.rootLogger<span class=\"token operator\">=</span>info,console\n\n<span class=\"token comment\">#附加器可自定义名称，如log4j.appender.xxx中，xxx即为附加器名称，默认控制台为console、文件为file、滚动为rollfile</span>\n<span class=\"token comment\">#控制台附加器</span>\nlog4j.appender.console <span class=\"token operator\">=</span> org.apache.log4j.ConsoleAppender\n<span class=\"token comment\">#Target可配置System.out及System.error，error显示文字为红色</span>\nlog4j.appender.console.Target <span class=\"token operator\">=</span> System.out\n<span class=\"token comment\">#layout可分为：</span>\n<span class=\"token comment\"># HTMLLayrout--网页表格形式布局</span>\n<span class=\"token comment\"># SimpleLayout--简单布局，包含日志信息级别及日志信息字符串</span>\n<span class=\"token comment\"># PatternLayout--匹配器布局</span>\nlog4j.appender.console.layout <span class=\"token operator\">=</span> org.apache.log4j.PatternLayout\n<span class=\"token comment\"># ConversionPattern结合PatternLayout使用，配置PatternLayout布局格式</span>\nlog4j.appender.console.layout.ConversionPattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>%-5p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>%d<span class=\"token punctuation\">{</span>yyyy-MM-dd HH:mm:ss<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> %m%n\n\n<span class=\"token comment\">#文件附加器</span>\nlog4j.appender.file <span class=\"token operator\">=</span> org.apache.log4j.ConsoleAppender\nlog4j.appender.file.Target <span class=\"token operator\">=</span> /Users/semon/IdeaProjects/helloworld/jakartaee/log4j.log\nlog4j.appender.file.layout <span class=\"token operator\">=</span> org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>%-5p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>%d<span class=\"token punctuation\">{</span>yyyy-MM-dd HH:mm:ss<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> %m%n\n\n<span class=\"token comment\">#滚动附加器</span>\nlog4j.appender.rollfile <span class=\"token operator\">=</span> org.apache.log4j.ConsoleAppender\nlog4j.appender.rollfile.Target <span class=\"token operator\">=</span> System.out\nlog4j.appender.rollfile.layout <span class=\"token operator\">=</span> org.apache.log4j.PatternLayout\nlog4j.appender.rollfile.MaxFileSize<span class=\"token operator\">=</span> 10kb\nlog4j.appender.rollfile.layout.ConversionPattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>%-5p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>%d<span class=\"token punctuation\">{</span>yyyy-MM-dd HH:mm:ss<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> %m%n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"log4j2\"><a href=\"#log4j2\" class=\"headerlink\" title=\"log4j2\"></a>log4j2</h3><p>log4j2使用基本与log4j一致，通过xml配置文件来定义</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"token comment\">&lt;!-- status=\"TRACE\"这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。OFF则关闭log4j2自己的日志输出 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span> <span class=\"token attr-name\">status</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OFF<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appenders</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Console</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Console<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SYSTEM_OUT<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token comment\">&lt;!--过滤器：控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--&gt;</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ThresholdFilter</span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>trace<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onMatch</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ACCEPT<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onMismatch</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DENY<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PatternLayout</span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Console</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token comment\">&lt;!--append默认为false，每次清空日志文件  filename指定相对路径为项目根目录--&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>File</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fileName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log/test.log<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">append</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PatternLayout</span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>File</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token comment\">&lt;!--指定日志滚动大小阈值为50M，超过大小文件进行压缩 --&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RollingFile</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>RollingFile<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fileName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logs/app.log<span class=\"token punctuation\">\"</span></span>\n                     <span class=\"token attr-name\">filePattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PatternLayout</span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%d{yyyy-MM-dd <span class=\"token punctuation\">'</span>at<span class=\"token punctuation\">'</span> HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SizeBasedTriggeringPolicy</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50MB<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RollingFile</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appenders</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>loggers</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token comment\">&lt;!-- 定义日志输出级别，默认为trace --&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>root</span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>trace<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token comment\">&lt;!-- 定义启用的日志附加器 --&gt;</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Console<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>root</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token comment\">&lt;!-- 指定特定类的日志配置 --&gt;</span>\n        <span class=\"token comment\">&lt;!-- additivity开启的话，由于这个logger也是满足root的，所以会被打印两遍。 不过root logger 的level是error，为什么Bar里面的trace信息也被打印两遍呢 --&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>logger</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.zzstxx.log4j2.HelloWorld2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warn<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">additivity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Console<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>logger</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token comment\">&lt;!-- 设置指定包目录下的输出级别 --&gt;</span>\n        <span class=\"token comment\">&lt;!-- &lt;logger name=\"com.zzstxx.log4j2\" level=\"warn\"\n            additivity=\"false\"&gt;\n            &lt;appender-ref ref=\"Console\" /&gt;\n        &lt;/logger&gt;s --&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>loggers</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"logback\"><a href=\"#logback\" class=\"headerlink\" title=\"logback\"></a>logback</h3><p>logback有三个核心模块logback-access、logback-core及logback-classic；其中logback-classic是log4j的升级版；可通过xml文件进行配置；</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span>\n\n<span class=\"token comment\">&lt;!--\nscan=true ：自动加载xml配置文件，每隔scanPeriod进行一次扫描\ndebug=true ：是否打印logback内部日志\n--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span> <span class=\"token attr-name\">scan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scanPeriod</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3 seconds<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">DEBUG</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token comment\">&lt;!--statusListener：监听logback内部信息--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>statusListener</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.status.OnConsoleStatusListener<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n\n    <span class=\"token comment\">&lt;!--name=\"stdout\" 指定appender名称--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>STDOUT<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.ConsoleAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>encoder</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token comment\">&lt;!--指定日志格式--&gt;</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pattern</span><span class=\"token punctuation\">&gt;</span></span>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pattern</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>encoder</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appender</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FILE<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.FileAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>file</span><span class=\"token punctuation\">&gt;</span></span>file.log<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>file</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>append</span><span class=\"token punctuation\">&gt;</span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>append</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>encoder</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pattern</span><span class=\"token punctuation\">&gt;</span></span>%-4relative [%thread] %-5level %logger{35} - %msg%n\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pattern</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>encoder</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appender</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ROLLINGFILE<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>file</span><span class=\"token punctuation\">&gt;</span></span>mylog.txt<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>file</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rollingPolicy</span>\n                <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token comment\">&lt;!-- rollover daily --&gt;</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fileNamePattern</span><span class=\"token punctuation\">&gt;</span></span>mylog-%d{yyyy-MM-dd}.%i.log.zip<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fileNamePattern</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token comment\">&lt;!-- 每个日志文件大小不超过100MB，在日志文件总大小不超过20GB的情况下保存60天，超出则清楚部分日志 --&gt;</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maxFileSize</span><span class=\"token punctuation\">&gt;</span></span>100MB<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maxFileSize</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maxHistory</span><span class=\"token punctuation\">&gt;</span></span>60<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maxHistory</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>totalSizeCap</span><span class=\"token punctuation\">&gt;</span></span>20GB<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>totalSizeCap</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>rollingPolicy</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>encoder</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pattern</span><span class=\"token punctuation\">&gt;</span></span>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pattern</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>encoder</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appender</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--appender-ref 指定启用附加器--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>root</span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>INFO<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>STDOUT<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>root</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"sl4j规范\"><a href=\"#sl4j规范\" class=\"headerlink\" title=\"sl4j规范\"></a>sl4j规范</h2><p>代表Simple Logging Facade for Java。它提供了Java中所有日志框架的简单抽象。因此，它使用户能够使用单个依赖项处理任何日志框架；</p>\n<ul>\n<li>使用SLF4J框架，可以在部署时迁移到所需的日志记录框架。</li>\n<li>Slf4J提供了对所有流行的日志框架的绑定，例如log4j，JUL，Simple logging和NOP。因此可以在部署时切换到任何这些流行的框架。</li>\n<li>无论使用哪种绑定，SLF4J都支持参数化日志记录消息。</li>\n<li>由于SLF4J将应用程序和日志记录框架分离，因此可以轻松编写独立于日志记录框架的应用程序。而无需担心用于编写应用程序的日志记录框架。</li>\n<li>SLF4J提供了一个简单的Java工具，称为迁移器。使用此工具，可以迁移现有项目，这些项目使用日志框架(如Jakarta Commons Logging(JCL)或log4j或Java.util.logging(JUL))到SLF4J。</li>\n</ul>\n<p>sl4j使用demo：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test01</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t <span class=\"token comment\">// 创建记录日志的对象</span>\n\t\t <span class=\"token comment\">//当需要更换日志实现jar时，仅需调整具体日志实现jar包及配置文件，代码不需要做变更</span>\n        <span class=\"token class-name\">Logger</span> log <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Test01</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"debug信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"info信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"warn信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Java日志配置\"><a href=\"#Java日志配置\" class=\"headerlink\" title=\"Java日志配置\"></a>Java日志配置</h1><h2 id=\"常用日志类\"><a href=\"#常用日志类\" class=\"headerlink\" title=\"常用日志类\"></a>常用日志类</h2><ul>\n<li>logger：Jdk内置，基本不用于生产环境</li>\n<li>log4j：apache提供，已于2015年停止更新，历史遗留项目仍在使用，最后版本为1.2.17</li>\n<li>log4j2：apache提供，log4j升级版本，性能较log4j提升10倍(官方说明)</li>\n<li>logback：log4j作者出走后重新开发，性能相对log4j有很大提升</li>\n</ul>\n<h3 id=\"log4j\"><a href=\"#log4j\" class=\"headerlink\" title=\"log4j\"></a>log4j</h3><p>log4j主要通过log4j.properties配置文件进行定义</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#跟日志</span>\n<span class=\"token comment\">#info：配置日志输出级别</span>\n<span class=\"token comment\">#console：日志附加器，配置日志输出方式，可同时配置多个附加器名称，如不配置，则不生效</span>\nlog4j.rootLogger<span class=\"token operator\">=</span>info,console\n\n<span class=\"token comment\">#附加器可自定义名称，如log4j.appender.xxx中，xxx即为附加器名称，默认控制台为console、文件为file、滚动为rollfile</span>\n<span class=\"token comment\">#控制台附加器</span>\nlog4j.appender.console <span class=\"token operator\">=</span> org.apache.log4j.ConsoleAppender\n<span class=\"token comment\">#Target可配置System.out及System.error，error显示文字为红色</span>\nlog4j.appender.console.Target <span class=\"token operator\">=</span> System.out\n<span class=\"token comment\">#layout可分为：</span>\n<span class=\"token comment\"># HTMLLayrout--网页表格形式布局</span>\n<span class=\"token comment\"># SimpleLayout--简单布局，包含日志信息级别及日志信息字符串</span>\n<span class=\"token comment\"># PatternLayout--匹配器布局</span>\nlog4j.appender.console.layout <span class=\"token operator\">=</span> org.apache.log4j.PatternLayout\n<span class=\"token comment\"># ConversionPattern结合PatternLayout使用，配置PatternLayout布局格式</span>\nlog4j.appender.console.layout.ConversionPattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>%-5p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>%d<span class=\"token punctuation\">&#123;</span>yyyy-MM-dd HH:mm:ss<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> %m%n\n\n<span class=\"token comment\">#文件附加器</span>\nlog4j.appender.file <span class=\"token operator\">=</span> org.apache.log4j.ConsoleAppender\nlog4j.appender.file.Target <span class=\"token operator\">=</span> /Users/semon/IdeaProjects/helloworld/jakartaee/log4j.log\nlog4j.appender.file.layout <span class=\"token operator\">=</span> org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>%-5p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>%d<span class=\"token punctuation\">&#123;</span>yyyy-MM-dd HH:mm:ss<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> %m%n\n\n<span class=\"token comment\">#滚动附加器</span>\nlog4j.appender.rollfile <span class=\"token operator\">=</span> org.apache.log4j.ConsoleAppender\nlog4j.appender.rollfile.Target <span class=\"token operator\">=</span> System.out\nlog4j.appender.rollfile.layout <span class=\"token operator\">=</span> org.apache.log4j.PatternLayout\nlog4j.appender.rollfile.MaxFileSize<span class=\"token operator\">=</span> 10kb\nlog4j.appender.rollfile.layout.ConversionPattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>%-5p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>%d<span class=\"token punctuation\">&#123;</span>yyyy-MM-dd HH:mm:ss<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> %m%n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"log4j2\"><a href=\"#log4j2\" class=\"headerlink\" title=\"log4j2\"></a>log4j2</h3><p>log4j2使用基本与log4j一致，通过xml配置文件来定义</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token comment\">&lt;!-- status=\"TRACE\"这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。OFF则关闭log4j2自己的日志输出 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span> <span class=\"token attr-name\">status</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OFF<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appenders</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Console</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Console<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SYSTEM_OUT<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!--过滤器：控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ThresholdFilter</span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>trace<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onMatch</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ACCEPT<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onMismatch</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DENY<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PatternLayout</span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %logger&#123;36&#125; - %msg%n<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Console</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--append默认为false，每次清空日志文件  filename指定相对路径为项目根目录--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>File</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fileName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log/test.log<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">append</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PatternLayout</span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%d&#123;HH:mm:ss.SSS&#125; %-5level %class&#123;36&#125; %L %M - %msg%xEx%n<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>File</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--指定日志滚动大小阈值为50M，超过大小文件进行压缩 --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RollingFile</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>RollingFile<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fileName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logs/app.log<span class=\"token punctuation\">\"</span></span>\n                     <span class=\"token attr-name\">filePattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log/$$&#123;date:yyyy-MM&#125;/app-%d&#123;MM-dd-yyyy&#125;-%i.log.gz<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PatternLayout</span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%d&#123;yyyy-MM-dd <span class=\"token punctuation\">'</span>at<span class=\"token punctuation\">'</span> HH:mm:ss z&#125; %-5level %class&#123;36&#125; %L %M - %msg%xEx%n<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SizeBasedTriggeringPolicy</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50MB<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RollingFile</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appenders</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>loggers</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- 定义日志输出级别，默认为trace --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>root</span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>trace<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- 定义启用的日志附加器 --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Console<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>root</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- 指定特定类的日志配置 --></span>\n        <span class=\"token comment\">&lt;!-- additivity开启的话，由于这个logger也是满足root的，所以会被打印两遍。 不过root logger 的level是error，为什么Bar里面的trace信息也被打印两遍呢 --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>logger</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.zzstxx.log4j2.HelloWorld2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warn<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">additivity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Console<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>logger</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- 设置指定包目录下的输出级别 --></span>\n        <span class=\"token comment\">&lt;!-- &lt;logger name=\"com.zzstxx.log4j2\" level=\"warn\"\n            additivity=\"false\">\n            &lt;appender-ref ref=\"Console\" />\n        &lt;/logger>s --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>loggers</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"logback\"><a href=\"#logback\" class=\"headerlink\" title=\"logback\"></a>logback</h3><p>logback有三个核心模块logback-access、logback-core及logback-classic；其中logback-classic是log4j的升级版；可通过xml文件进行配置；</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span>\n\n<span class=\"token comment\">&lt;!--\nscan=true ：自动加载xml配置文件，每隔scanPeriod进行一次扫描\ndebug=true ：是否打印logback内部日志\n--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span> <span class=\"token attr-name\">scan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scanPeriod</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3 seconds<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">DEBUG</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!--statusListener：监听logback内部信息--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>statusListener</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.status.OnConsoleStatusListener<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n    <span class=\"token comment\">&lt;!--name=\"stdout\" 指定appender名称--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>STDOUT<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.ConsoleAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>encoder</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!--指定日志格式--></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pattern</span><span class=\"token punctuation\">></span></span>%d&#123;HH:mm:ss&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pattern</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>encoder</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appender</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FILE<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.FileAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>file</span><span class=\"token punctuation\">></span></span>file.log<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>file</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>append</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>append</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>encoder</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pattern</span><span class=\"token punctuation\">></span></span>%-4relative [%thread] %-5level %logger&#123;35&#125; - %msg%n\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pattern</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>encoder</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appender</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ROLLINGFILE<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>file</span><span class=\"token punctuation\">></span></span>mylog.txt<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>file</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rollingPolicy</span>\n                <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- rollover daily --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fileNamePattern</span><span class=\"token punctuation\">></span></span>mylog-%d&#123;yyyy-MM-dd&#125;.%i.log.zip<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fileNamePattern</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- 每个日志文件大小不超过100MB，在日志文件总大小不超过20GB的情况下保存60天，超出则清楚部分日志 --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maxFileSize</span><span class=\"token punctuation\">></span></span>100MB<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maxFileSize</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maxHistory</span><span class=\"token punctuation\">></span></span>60<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maxHistory</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>totalSizeCap</span><span class=\"token punctuation\">></span></span>20GB<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>totalSizeCap</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>rollingPolicy</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>encoder</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pattern</span><span class=\"token punctuation\">></span></span>%d&#123;HH:mm:ss&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pattern</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>encoder</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appender</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!--appender-ref 指定启用附加器--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>root</span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>INFO<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>STDOUT<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>root</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"sl4j规范\"><a href=\"#sl4j规范\" class=\"headerlink\" title=\"sl4j规范\"></a>sl4j规范</h2><p>代表Simple Logging Facade for Java。它提供了Java中所有日志框架的简单抽象。因此，它使用户能够使用单个依赖项处理任何日志框架；</p>\n<ul>\n<li>使用SLF4J框架，可以在部署时迁移到所需的日志记录框架。</li>\n<li>Slf4J提供了对所有流行的日志框架的绑定，例如log4j，JUL，Simple logging和NOP。因此可以在部署时切换到任何这些流行的框架。</li>\n<li>无论使用哪种绑定，SLF4J都支持参数化日志记录消息。</li>\n<li>由于SLF4J将应用程序和日志记录框架分离，因此可以轻松编写独立于日志记录框架的应用程序。而无需担心用于编写应用程序的日志记录框架。</li>\n<li>SLF4J提供了一个简单的Java工具，称为迁移器。使用此工具，可以迁移现有项目，这些项目使用日志框架(如Jakarta Commons Logging(JCL)或log4j或Java.util.logging(JUL))到SLF4J。</li>\n</ul>\n<p>sl4j使用demo：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test01</span> <span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t <span class=\"token comment\">// 创建记录日志的对象</span>\n\t\t <span class=\"token comment\">//当需要更换日志实现jar时，仅需调整具体日志实现jar包及配置文件，代码不需要做变更</span>\n        <span class=\"token class-name\">Logger</span> log <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Test01</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"debug信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"info信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"warn信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"Java运行环境变量","author":"Semon","_content":"# Java执行及classpath\n## java jar包执行\n+ java -jar jarname param1：直接指定需要运行的jar包名称，可接参数；\n+ java -cp .：/etc/*:/conf classname param1：可通过cp指定classpath路径，支持通配符，后接入口main class名称，可接参数\n    + 指定配置文件时，只能指定到目录，后不可添加/或/*\n    + 指定jar包通配时，需使用目录名后接/*,或枚举所有jar名称(jdk6以前仅支持枚举)；\n        + java -cp $(echo /data/apps/ilb/*.jar | tr ' ' ':') com.chinacache.Main param1\n\n        ## 查询jar包中类名\n        \n```bash\nfor file in *.jar; do echo ${file}; jar vtf ${file} | grep 'content'; done\n```","source":"_posts/Java程序执行.md","raw":"---\ntitle: Java运行环境变量\ncategories: Tech\ntags: Java\nauthor: Semon\n---\n# Java执行及classpath\n## java jar包执行\n+ java -jar jarname param1：直接指定需要运行的jar包名称，可接参数；\n+ java -cp .：/etc/*:/conf classname param1：可通过cp指定classpath路径，支持通配符，后接入口main class名称，可接参数\n    + 指定配置文件时，只能指定到目录，后不可添加/或/*\n    + 指定jar包通配时，需使用目录名后接/*,或枚举所有jar名称(jdk6以前仅支持枚举)；\n        + java -cp $(echo /data/apps/ilb/*.jar | tr ' ' ':') com.chinacache.Main param1\n\n        ## 查询jar包中类名\n        \n```bash\nfor file in *.jar; do echo ${file}; jar vtf ${file} | grep 'content'; done\n```","slug":"Java程序执行","published":1,"date":"2021-02-24T11:52:00.128Z","updated":"2021-02-24T11:52:00.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckljiguap0009facs2y75932o","content":"<h1 id=\"Java执行及classpath\"><a href=\"#Java执行及classpath\" class=\"headerlink\" title=\"Java执行及classpath\"></a>Java执行及classpath</h1><h2 id=\"java-jar包执行\"><a href=\"#java-jar包执行\" class=\"headerlink\" title=\"java jar包执行\"></a>java jar包执行</h2><ul>\n<li><p>java -jar jarname param1：直接指定需要运行的jar包名称，可接参数；</p>\n</li>\n<li><p>java -cp .：/etc/*:/conf classname param1：可通过cp指定classpath路径，支持通配符，后接入口main class名称，可接参数</p>\n<ul>\n<li><p>指定配置文件时，只能指定到目录，后不可添加/或/*</p>\n</li>\n<li><p>指定jar包通配时，需使用目录名后接/*,或枚举所有jar名称(jdk6以前仅支持枚举)；</p>\n<ul>\n<li><p>java -cp $(echo /data/apps/ilb/*.jar | tr ‘ ‘ ‘:’) com.chinacache.Main param1</p>\n<h2 id=\"查询jar包中类名\"><a href=\"#查询jar包中类名\" class=\"headerlink\" title=\"查询jar包中类名\"></a>查询jar包中类名</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">file</span> <span class=\"token keyword\">in</span> *.jar<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">${file}</span><span class=\"token punctuation\">;</span> jar vtf <span class=\"token variable\">${file}</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Java执行及classpath\"><a href=\"#Java执行及classpath\" class=\"headerlink\" title=\"Java执行及classpath\"></a>Java执行及classpath</h1><h2 id=\"java-jar包执行\"><a href=\"#java-jar包执行\" class=\"headerlink\" title=\"java jar包执行\"></a>java jar包执行</h2><ul>\n<li><p>java -jar jarname param1：直接指定需要运行的jar包名称，可接参数；</p>\n</li>\n<li><p>java -cp .：/etc/*:/conf classname param1：可通过cp指定classpath路径，支持通配符，后接入口main class名称，可接参数</p>\n<ul>\n<li><p>指定配置文件时，只能指定到目录，后不可添加/或/*</p>\n</li>\n<li><p>指定jar包通配时，需使用目录名后接/*,或枚举所有jar名称(jdk6以前仅支持枚举)；</p>\n<ul>\n<li><p>java -cp $(echo /data/apps/ilb/*.jar | tr ‘ ‘ ‘:’) com.chinacache.Main param1</p>\n<h2 id=\"查询jar包中类名\"><a href=\"#查询jar包中类名\" class=\"headerlink\" title=\"查询jar包中类名\"></a>查询jar包中类名</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">file</span> <span class=\"token keyword\">in</span> *.jar<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;file&#125;</span><span class=\"token punctuation\">;</span> jar vtf <span class=\"token variable\">$&#123;file&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Java设计模式","author":"Semon","_content":"# Java 设计模式\n## 单例模式\n为了节省内存资源、保证数据内容的一致性，对某些类要求只能创建一个实例，这就是所谓的单例模式\n\n单例模式有 3 个特点：\n单例类只有一个实例对象；\n该单例对象必须由单例类自行创建；\n单例类对外提供一个访问该单例的全局访问点；\n\n单例模式有饿汉式与懒汉式两种类型：\n+ 饿汉式：该模式的特点是类一旦加载就创建一个单例，保证在调用 getInstance 方法之前单例已经存在了。饿汉式单例在类创建的同时就已经创建好一个静态的对象供系统使用，以后不再改变，所以是线程安全的，可以直接用于多线程而不会出现问题。\n\n    ```java\n    public class HungrySingleton\n    {\n        private static final HungrySingleton instance=new HungrySingleton();\n        private HungrySingleton(){}\n        public static HungrySingleton getInstance()\n        {\n            return instance;\n        }\n    }\n    ```\n    \n+ 懒汉式：该模式的特点是类加载时没有生成单例，只有当第一次调用 getlnstance 方法时才去创建这个单例。懒汉式用于多线程建议使用静态内部类方式保证线程安全。\n\n    ```java\n    public class SingletonLazy {\n        private SingletonLazy() {\n        }\n        private static class SingletonHolder{\n            private static SingletonLazy instance = new SingletonLazy();\n        }\n        public static SingletonLazy getInstance(){\n            return SingletonHolder.instance;\n        }\n    }\n    ```\n    \n    ","source":"_posts/Java设计模式.md","raw":"---\ntitle: Java设计模式\ncategories: Tech\ntags: Java\nauthor: Semon\n---\n# Java 设计模式\n## 单例模式\n为了节省内存资源、保证数据内容的一致性，对某些类要求只能创建一个实例，这就是所谓的单例模式\n\n单例模式有 3 个特点：\n单例类只有一个实例对象；\n该单例对象必须由单例类自行创建；\n单例类对外提供一个访问该单例的全局访问点；\n\n单例模式有饿汉式与懒汉式两种类型：\n+ 饿汉式：该模式的特点是类一旦加载就创建一个单例，保证在调用 getInstance 方法之前单例已经存在了。饿汉式单例在类创建的同时就已经创建好一个静态的对象供系统使用，以后不再改变，所以是线程安全的，可以直接用于多线程而不会出现问题。\n\n    ```java\n    public class HungrySingleton\n    {\n        private static final HungrySingleton instance=new HungrySingleton();\n        private HungrySingleton(){}\n        public static HungrySingleton getInstance()\n        {\n            return instance;\n        }\n    }\n    ```\n    \n+ 懒汉式：该模式的特点是类加载时没有生成单例，只有当第一次调用 getlnstance 方法时才去创建这个单例。懒汉式用于多线程建议使用静态内部类方式保证线程安全。\n\n    ```java\n    public class SingletonLazy {\n        private SingletonLazy() {\n        }\n        private static class SingletonHolder{\n            private static SingletonLazy instance = new SingletonLazy();\n        }\n        public static SingletonLazy getInstance(){\n            return SingletonHolder.instance;\n        }\n    }\n    ```\n    \n    ","slug":"Java设计模式","published":1,"date":"2021-02-24T11:52:00.129Z","updated":"2021-02-24T11:52:00.129Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckljiguas000bfacsgm7g498g","content":"<h1 id=\"Java-设计模式\"><a href=\"#Java-设计模式\" class=\"headerlink\" title=\"Java 设计模式\"></a>Java 设计模式</h1><h2 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h2><p>为了节省内存资源、保证数据内容的一致性，对某些类要求只能创建一个实例，这就是所谓的单例模式</p>\n<p>单例模式有 3 个特点：<br>单例类只有一个实例对象；<br>该单例对象必须由单例类自行创建；<br>单例类对外提供一个访问该单例的全局访问点；</p>\n<p>单例模式有饿汉式与懒汉式两种类型：</p>\n<ul>\n<li><p>饿汉式：该模式的特点是类一旦加载就创建一个单例，保证在调用 getInstance 方法之前单例已经存在了。饿汉式单例在类创建的同时就已经创建好一个静态的对象供系统使用，以后不再改变，所以是线程安全的，可以直接用于多线程而不会出现问题。</p>\n  <pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HungrySingleton</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">HungrySingleton</span> instance<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HungrySingleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">HungrySingleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">HungrySingleton</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>懒汉式：该模式的特点是类加载时没有生成单例，只有当第一次调用 getlnstance 方法时才去创建这个单例。懒汉式用于多线程建议使用静态内部类方式保证线程安全。</p>\n  <pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonLazy</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SingletonLazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonHolder</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SingletonLazy</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SingletonLazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SingletonLazy</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">SingletonHolder</span><span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Java-设计模式\"><a href=\"#Java-设计模式\" class=\"headerlink\" title=\"Java 设计模式\"></a>Java 设计模式</h1><h2 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h2><p>为了节省内存资源、保证数据内容的一致性，对某些类要求只能创建一个实例，这就是所谓的单例模式</p>\n<p>单例模式有 3 个特点：<br>单例类只有一个实例对象；<br>该单例对象必须由单例类自行创建；<br>单例类对外提供一个访问该单例的全局访问点；</p>\n<p>单例模式有饿汉式与懒汉式两种类型：</p>\n<ul>\n<li><p>饿汉式：该模式的特点是类一旦加载就创建一个单例，保证在调用 getInstance 方法之前单例已经存在了。饿汉式单例在类创建的同时就已经创建好一个静态的对象供系统使用，以后不再改变，所以是线程安全的，可以直接用于多线程而不会出现问题。</p>\n  <pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HungrySingleton</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">HungrySingleton</span> instance<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HungrySingleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">HungrySingleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">HungrySingleton</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>懒汉式：该模式的特点是类加载时没有生成单例，只有当第一次调用 getlnstance 方法时才去创建这个单例。懒汉式用于多线程建议使用静态内部类方式保证线程安全。</p>\n  <pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonLazy</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SingletonLazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonHolder</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SingletonLazy</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SingletonLazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SingletonLazy</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">SingletonHolder</span><span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n"},{"title":"Java类加载与生命周期","author":"Semon","_content":"# java类生命周期与加载\n\n## 类的生命周期\n类的生命周期从大的方面可以分为两个部分：\n+ class-->class对象：状态、链接、初始化\n+ 实例化-->GC：实例化、使用、卸载\n\n![](media/15626768196365/15632597596291.jpg)\n\nJvm通过状态、连接和初始化一个java类型，使该类型可以被正在运行的java程序使用；\n+ 装载：将二进制class文件读入jvm中；\n+ 链接：将读入的class文件合并到jvm运行时环境中：\n    + 验证：验证class是否符合jvm标准\n    + 准备：为class分配内存；\n    + 解析：将常量池中的符号引用转化为直接引用，jvm实现可延迟解析实现；\n\n+ 初始化：将class中的各类静态成员加载至内存中并赋值；\n+ 使用：对类进行实例化(普通成员初始化、实例构造、成员赋值)及引用；\n+ 卸载：通过GC对已无引用对象进行资源回收；\n\n\n## 类加载器\nJDK 默认提供了如下几种ClassLoader：\n+ **Bootstrap loader**：Bootstrap加载器是用C++语言写的，它是在Java虚拟机启动后初始化的，它主要负责加载%JAVA_HOME%/jre/lib,-Xbootclasspath参数指定的路径以及%JAVA_HOME%/jre/classes中的类。\n+ **ExtClassLoader**：Bootstrp loader加载ExtClassLoader,并且将ExtClassLoader的父加载器设置为Bootstrp loader.ExtClassLoader是用Java写的，具体来说就是 sun.misc.Launcher$ExtClassLoader，ExtClassLoader主要加载%JAVA_HOME%/jre/lib/ext，此路径下的所有classes目录以及java.ext.dirs系统变量指定的路径中类库。\n+ **AppClassLoader**：Bootstrp loader加载完ExtClassLoader后，就会加载AppClassLoader,并且将AppClassLoader的父加载器指定为 ExtClassLoader。AppClassLoader也是用Java写成的，它的实现类是 sun.misc.Launcher$AppClassLoader，另外我们知道ClassLoader中有个getSystemClassLoader方法,此方法返回的正是AppclassLoader.AppClassLoader主要负责加载classpath所指定的位置的类或者是jar文档，**它也是Java程序默认的类加载器**。\n+ **User-Defined Class Loader**：用户自定义加载器 自己定义从哪里加载类的二进制流；定义自己的加载器步骤为：\n    + 继承java.lang.ClassLoader\n    + 重写父类findClass方法（*因为JDK已经在loadClass方法中帮我们实现了ClassLoader搜索类的算法，当在loadClass方法中搜索不到类时，loadClass方法就会调用findClass方法来搜索类，所以我们只需重写该方法即可。如没有特殊的要求，一般不建议重写loadClass搜索类的算法。*）；\n![](media/15626768196365/15632617342292.jpg)\n\njava采用了委托模型(双亲委托模型)机制，这个机制简单来讲，就是“类装载器有载入类的需求时，会先请示其Parent使用其搜索路径帮忙载入，如果Parent 找不到,那么才由自己依照自己的搜索路径搜索类”\n\n每一个层次的类加载器都是如此。因此，所有的加载请求最终都应该传送到顶层的启动类加载器中。\n\n只有当父加载器反馈自己无法完成这个加载请求时（搜索范围中没有找到所需的类），子加载器才会尝试自己去加载。\n\n对于任意一个类，都需要由加载它的类加载器和这个类本身一同确立其在虚拟机中的唯一性，每一个类加载器，都拥有一个独立的类名称空间。因此，使用双亲委派模型来组织类加载器之间的关系，有一个显而易见的好处：类随着它的类加载器一起具备了一种带有优先级的层次关系。\n\n## 类加载与初始化顺序\nJava类加载机制中最重要的就是程序初始化过程，其中包含了静态资源，非静态资源，父类子类，构造方法之间的执行顺序；\n+ **常规顺序**：父类的静态代码块->子类的静态代码块->初始化父类的属性值/父类的普通代码块(自上而下的顺序排列)->父类的构造方法->初始化子类的属性值/子类的普通代码块(自上而下的顺序排列)->子类的构造方法。\n+ **特殊情况**：\n    + 当类中显示创建静态类对象且构造器中包含对静态变量赋值，此时静态对象与静态变量赋值顺序将决定最终结果的产生；\n    + 静态成员变量和静态代码块只有在类被调用时才会初始化；\n    + 静态内部类只有被外部类调用时才会初始化；\n\n```java\nclass Singleton1 {\n    //先赋值然后自增，结果返回为2和3\n    public static int value1 = 1;\n    public static int value2 = 2;\n    private static Singleton1 st1 = new Singleton1();\n    \n    private  Singleton1() {\n        value1++;\n        value2++;\n    }\n    \n    public static Singleton1 getInstance() {\n        return st1;\n    }\n}\n\nclass Singleton2 {\n    //实例化时静态变量尚未赋值，默认值为0，自增后被后续变量赋值覆盖结果返回为1和2\n    private static Singleton2 st2 = new Singleton2();\n    public static int value1 = 1;\n    public static int value2 = 2;\n    \n    private  Singleton2() {\n        value1++;\n        value2++;    \n    }\n    \n    public static Singleton2 getInstance() {\n        return st2;\n    }\n}\n\npublic class SingletonDemo {\n    public static void main(String[] args) {\n        Singleton1.getInstance();\n        Singleton2.getInstance();\n        //value1=1 value2=2\n        System.out.println(\"Singleton value1:\" + Singleton1.value1);\n        System.out.println(\"Singleton value2:\" + Singleton1.value2);\n        //value1=11 value2=12\n        System.out.println(\"Singleton2 value1:\" + Singleton2.value1);\n        System.out.println(\"Singleton2 value2:\" + Singleton2.value2);\n    }\n}\n```\n\n## 主动引用立即对类进行加载的5中情况：\n1. 使用new关键字初始化对象、读取或设置static字段、调用类的静态方法；\n2. 使用java.lang.reflect对类进行反射调用时，如果类没有初始化，需先初始化\n3. 初始化子类时，父类未初始化，需先初始化父类；\n4. 虚拟机启动时，会先初始化用户指定主类；\n5. jdk1.7的动态语言支持，java.lang.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄，且该方法归属类未实例化，需先触发其实例化；\n\n## 被动引用不触发初始化三种情况\n1. 子类引用父类静态成员，不会触发子类初始化；\n2. 通过数组定义来引用类，不会触发类实例化；\n3. 引用其他类常量不会触发本类实例化；\n\n  ​      \n","source":"_posts/类加载与生命周期.md","raw":"---\ntitle: Java类加载与生命周期\ncategories: Tech\ntags: Java\nauthor: Semon\n---\n# java类生命周期与加载\n\n## 类的生命周期\n类的生命周期从大的方面可以分为两个部分：\n+ class-->class对象：状态、链接、初始化\n+ 实例化-->GC：实例化、使用、卸载\n\n![](media/15626768196365/15632597596291.jpg)\n\nJvm通过状态、连接和初始化一个java类型，使该类型可以被正在运行的java程序使用；\n+ 装载：将二进制class文件读入jvm中；\n+ 链接：将读入的class文件合并到jvm运行时环境中：\n    + 验证：验证class是否符合jvm标准\n    + 准备：为class分配内存；\n    + 解析：将常量池中的符号引用转化为直接引用，jvm实现可延迟解析实现；\n\n+ 初始化：将class中的各类静态成员加载至内存中并赋值；\n+ 使用：对类进行实例化(普通成员初始化、实例构造、成员赋值)及引用；\n+ 卸载：通过GC对已无引用对象进行资源回收；\n\n\n## 类加载器\nJDK 默认提供了如下几种ClassLoader：\n+ **Bootstrap loader**：Bootstrap加载器是用C++语言写的，它是在Java虚拟机启动后初始化的，它主要负责加载%JAVA_HOME%/jre/lib,-Xbootclasspath参数指定的路径以及%JAVA_HOME%/jre/classes中的类。\n+ **ExtClassLoader**：Bootstrp loader加载ExtClassLoader,并且将ExtClassLoader的父加载器设置为Bootstrp loader.ExtClassLoader是用Java写的，具体来说就是 sun.misc.Launcher$ExtClassLoader，ExtClassLoader主要加载%JAVA_HOME%/jre/lib/ext，此路径下的所有classes目录以及java.ext.dirs系统变量指定的路径中类库。\n+ **AppClassLoader**：Bootstrp loader加载完ExtClassLoader后，就会加载AppClassLoader,并且将AppClassLoader的父加载器指定为 ExtClassLoader。AppClassLoader也是用Java写成的，它的实现类是 sun.misc.Launcher$AppClassLoader，另外我们知道ClassLoader中有个getSystemClassLoader方法,此方法返回的正是AppclassLoader.AppClassLoader主要负责加载classpath所指定的位置的类或者是jar文档，**它也是Java程序默认的类加载器**。\n+ **User-Defined Class Loader**：用户自定义加载器 自己定义从哪里加载类的二进制流；定义自己的加载器步骤为：\n    + 继承java.lang.ClassLoader\n    + 重写父类findClass方法（*因为JDK已经在loadClass方法中帮我们实现了ClassLoader搜索类的算法，当在loadClass方法中搜索不到类时，loadClass方法就会调用findClass方法来搜索类，所以我们只需重写该方法即可。如没有特殊的要求，一般不建议重写loadClass搜索类的算法。*）；\n![](media/15626768196365/15632617342292.jpg)\n\njava采用了委托模型(双亲委托模型)机制，这个机制简单来讲，就是“类装载器有载入类的需求时，会先请示其Parent使用其搜索路径帮忙载入，如果Parent 找不到,那么才由自己依照自己的搜索路径搜索类”\n\n每一个层次的类加载器都是如此。因此，所有的加载请求最终都应该传送到顶层的启动类加载器中。\n\n只有当父加载器反馈自己无法完成这个加载请求时（搜索范围中没有找到所需的类），子加载器才会尝试自己去加载。\n\n对于任意一个类，都需要由加载它的类加载器和这个类本身一同确立其在虚拟机中的唯一性，每一个类加载器，都拥有一个独立的类名称空间。因此，使用双亲委派模型来组织类加载器之间的关系，有一个显而易见的好处：类随着它的类加载器一起具备了一种带有优先级的层次关系。\n\n## 类加载与初始化顺序\nJava类加载机制中最重要的就是程序初始化过程，其中包含了静态资源，非静态资源，父类子类，构造方法之间的执行顺序；\n+ **常规顺序**：父类的静态代码块->子类的静态代码块->初始化父类的属性值/父类的普通代码块(自上而下的顺序排列)->父类的构造方法->初始化子类的属性值/子类的普通代码块(自上而下的顺序排列)->子类的构造方法。\n+ **特殊情况**：\n    + 当类中显示创建静态类对象且构造器中包含对静态变量赋值，此时静态对象与静态变量赋值顺序将决定最终结果的产生；\n    + 静态成员变量和静态代码块只有在类被调用时才会初始化；\n    + 静态内部类只有被外部类调用时才会初始化；\n\n```java\nclass Singleton1 {\n    //先赋值然后自增，结果返回为2和3\n    public static int value1 = 1;\n    public static int value2 = 2;\n    private static Singleton1 st1 = new Singleton1();\n    \n    private  Singleton1() {\n        value1++;\n        value2++;\n    }\n    \n    public static Singleton1 getInstance() {\n        return st1;\n    }\n}\n\nclass Singleton2 {\n    //实例化时静态变量尚未赋值，默认值为0，自增后被后续变量赋值覆盖结果返回为1和2\n    private static Singleton2 st2 = new Singleton2();\n    public static int value1 = 1;\n    public static int value2 = 2;\n    \n    private  Singleton2() {\n        value1++;\n        value2++;    \n    }\n    \n    public static Singleton2 getInstance() {\n        return st2;\n    }\n}\n\npublic class SingletonDemo {\n    public static void main(String[] args) {\n        Singleton1.getInstance();\n        Singleton2.getInstance();\n        //value1=1 value2=2\n        System.out.println(\"Singleton value1:\" + Singleton1.value1);\n        System.out.println(\"Singleton value2:\" + Singleton1.value2);\n        //value1=11 value2=12\n        System.out.println(\"Singleton2 value1:\" + Singleton2.value1);\n        System.out.println(\"Singleton2 value2:\" + Singleton2.value2);\n    }\n}\n```\n\n## 主动引用立即对类进行加载的5中情况：\n1. 使用new关键字初始化对象、读取或设置static字段、调用类的静态方法；\n2. 使用java.lang.reflect对类进行反射调用时，如果类没有初始化，需先初始化\n3. 初始化子类时，父类未初始化，需先初始化父类；\n4. 虚拟机启动时，会先初始化用户指定主类；\n5. jdk1.7的动态语言支持，java.lang.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄，且该方法归属类未实例化，需先触发其实例化；\n\n## 被动引用不触发初始化三种情况\n1. 子类引用父类静态成员，不会触发子类初始化；\n2. 通过数组定义来引用类，不会触发类实例化；\n3. 引用其他类常量不会触发本类实例化；\n\n  ​      \n","slug":"类加载与生命周期","published":1,"date":"2021-02-24T11:52:00.129Z","updated":"2021-02-24T11:52:00.129Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckljiguay000ffacs9ykx7wcw","content":"<h1 id=\"java类生命周期与加载\"><a href=\"#java类生命周期与加载\" class=\"headerlink\" title=\"java类生命周期与加载\"></a>java类生命周期与加载</h1><h2 id=\"类的生命周期\"><a href=\"#类的生命周期\" class=\"headerlink\" title=\"类的生命周期\"></a>类的生命周期</h2><p>类的生命周期从大的方面可以分为两个部分：</p>\n<ul>\n<li>class–&gt;class对象：状态、链接、初始化</li>\n<li>实例化–&gt;GC：实例化、使用、卸载</li>\n</ul>\n<p><img src=\"media/15626768196365/15632597596291.jpg\"></p>\n<p>Jvm通过状态、连接和初始化一个java类型，使该类型可以被正在运行的java程序使用；</p>\n<ul>\n<li><p>装载：将二进制class文件读入jvm中；</p>\n</li>\n<li><p>链接：将读入的class文件合并到jvm运行时环境中：</p>\n<ul>\n<li>验证：验证class是否符合jvm标准</li>\n<li>准备：为class分配内存；</li>\n<li>解析：将常量池中的符号引用转化为直接引用，jvm实现可延迟解析实现；</li>\n</ul>\n</li>\n<li><p>初始化：将class中的各类静态成员加载至内存中并赋值；</p>\n</li>\n<li><p>使用：对类进行实例化(普通成员初始化、实例构造、成员赋值)及引用；</p>\n</li>\n<li><p>卸载：通过GC对已无引用对象进行资源回收；</p>\n</li>\n</ul>\n<h2 id=\"类加载器\"><a href=\"#类加载器\" class=\"headerlink\" title=\"类加载器\"></a>类加载器</h2><p>JDK 默认提供了如下几种ClassLoader：</p>\n<ul>\n<li><strong>Bootstrap loader</strong>：Bootstrap加载器是用C++语言写的，它是在Java虚拟机启动后初始化的，它主要负责加载%JAVA_HOME%/jre/lib,-Xbootclasspath参数指定的路径以及%JAVA_HOME%/jre/classes中的类。</li>\n<li><strong>ExtClassLoader</strong>：Bootstrp loader加载ExtClassLoader,并且将ExtClassLoader的父加载器设置为Bootstrp loader.ExtClassLoader是用Java写的，具体来说就是 sun.misc.Launcher$ExtClassLoader，ExtClassLoader主要加载%JAVA_HOME%/jre/lib/ext，此路径下的所有classes目录以及java.ext.dirs系统变量指定的路径中类库。</li>\n<li><strong>AppClassLoader</strong>：Bootstrp loader加载完ExtClassLoader后，就会加载AppClassLoader,并且将AppClassLoader的父加载器指定为 ExtClassLoader。AppClassLoader也是用Java写成的，它的实现类是 sun.misc.Launcher$AppClassLoader，另外我们知道ClassLoader中有个getSystemClassLoader方法,此方法返回的正是AppclassLoader.AppClassLoader主要负责加载classpath所指定的位置的类或者是jar文档，<strong>它也是Java程序默认的类加载器</strong>。</li>\n<li><strong>User-Defined Class Loader</strong>：用户自定义加载器 自己定义从哪里加载类的二进制流；定义自己的加载器步骤为：<ul>\n<li>继承java.lang.ClassLoader</li>\n<li>重写父类findClass方法（<em>因为JDK已经在loadClass方法中帮我们实现了ClassLoader搜索类的算法，当在loadClass方法中搜索不到类时，loadClass方法就会调用findClass方法来搜索类，所以我们只需重写该方法即可。如没有特殊的要求，一般不建议重写loadClass搜索类的算法。</em>）；<br><img src=\"media/15626768196365/15632617342292.jpg\"></li>\n</ul>\n</li>\n</ul>\n<p>java采用了委托模型(双亲委托模型)机制，这个机制简单来讲，就是“类装载器有载入类的需求时，会先请示其Parent使用其搜索路径帮忙载入，如果Parent 找不到,那么才由自己依照自己的搜索路径搜索类”</p>\n<p>每一个层次的类加载器都是如此。因此，所有的加载请求最终都应该传送到顶层的启动类加载器中。</p>\n<p>只有当父加载器反馈自己无法完成这个加载请求时（搜索范围中没有找到所需的类），子加载器才会尝试自己去加载。</p>\n<p>对于任意一个类，都需要由加载它的类加载器和这个类本身一同确立其在虚拟机中的唯一性，每一个类加载器，都拥有一个独立的类名称空间。因此，使用双亲委派模型来组织类加载器之间的关系，有一个显而易见的好处：类随着它的类加载器一起具备了一种带有优先级的层次关系。</p>\n<h2 id=\"类加载与初始化顺序\"><a href=\"#类加载与初始化顺序\" class=\"headerlink\" title=\"类加载与初始化顺序\"></a>类加载与初始化顺序</h2><p>Java类加载机制中最重要的就是程序初始化过程，其中包含了静态资源，非静态资源，父类子类，构造方法之间的执行顺序；</p>\n<ul>\n<li><strong>常规顺序</strong>：父类的静态代码块-&gt;子类的静态代码块-&gt;初始化父类的属性值/父类的普通代码块(自上而下的顺序排列)-&gt;父类的构造方法-&gt;初始化子类的属性值/子类的普通代码块(自上而下的顺序排列)-&gt;子类的构造方法。</li>\n<li><strong>特殊情况</strong>：<ul>\n<li>当类中显示创建静态类对象且构造器中包含对静态变量赋值，此时静态对象与静态变量赋值顺序将决定最终结果的产生；</li>\n<li>静态成员变量和静态代码块只有在类被调用时才会初始化；</li>\n<li>静态内部类只有被外部类调用时才会初始化；</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//先赋值然后自增，结果返回为2和3</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> value1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> value2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1</span> st1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">private</span>  <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        value1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        value2<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> st1<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton2</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//实例化时静态变量尚未赋值，默认值为0，自增后被后续变量赋值覆盖结果返回为1和2</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton2</span> st2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> value1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> value2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">private</span>  <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        value1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        value2<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>    \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton2</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> st2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonDemo</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//value1=1 value2=2</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Singleton value1:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">.</span>value1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Singleton value2:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">.</span>value2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//value1=11 value2=12</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Singleton2 value1:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">.</span>value1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Singleton2 value2:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">.</span>value2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"主动引用立即对类进行加载的5中情况：\"><a href=\"#主动引用立即对类进行加载的5中情况：\" class=\"headerlink\" title=\"主动引用立即对类进行加载的5中情况：\"></a>主动引用立即对类进行加载的5中情况：</h2><ol>\n<li>使用new关键字初始化对象、读取或设置static字段、调用类的静态方法；</li>\n<li>使用java.lang.reflect对类进行反射调用时，如果类没有初始化，需先初始化</li>\n<li>初始化子类时，父类未初始化，需先初始化父类；</li>\n<li>虚拟机启动时，会先初始化用户指定主类；</li>\n<li>jdk1.7的动态语言支持，java.lang.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄，且该方法归属类未实例化，需先触发其实例化；</li>\n</ol>\n<h2 id=\"被动引用不触发初始化三种情况\"><a href=\"#被动引用不触发初始化三种情况\" class=\"headerlink\" title=\"被动引用不触发初始化三种情况\"></a>被动引用不触发初始化三种情况</h2><ol>\n<li><p>子类引用父类静态成员，不会触发子类初始化；</p>\n</li>\n<li><p>通过数组定义来引用类，不会触发类实例化；</p>\n</li>\n<li><p>引用其他类常量不会触发本类实例化；</p>\n<p>​      </p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"java类生命周期与加载\"><a href=\"#java类生命周期与加载\" class=\"headerlink\" title=\"java类生命周期与加载\"></a>java类生命周期与加载</h1><h2 id=\"类的生命周期\"><a href=\"#类的生命周期\" class=\"headerlink\" title=\"类的生命周期\"></a>类的生命周期</h2><p>类的生命周期从大的方面可以分为两个部分：</p>\n<ul>\n<li>class–&gt;class对象：状态、链接、初始化</li>\n<li>实例化–&gt;GC：实例化、使用、卸载</li>\n</ul>\n<p><img src=\"media/15626768196365/15632597596291.jpg\"></p>\n<p>Jvm通过状态、连接和初始化一个java类型，使该类型可以被正在运行的java程序使用；</p>\n<ul>\n<li><p>装载：将二进制class文件读入jvm中；</p>\n</li>\n<li><p>链接：将读入的class文件合并到jvm运行时环境中：</p>\n<ul>\n<li>验证：验证class是否符合jvm标准</li>\n<li>准备：为class分配内存；</li>\n<li>解析：将常量池中的符号引用转化为直接引用，jvm实现可延迟解析实现；</li>\n</ul>\n</li>\n<li><p>初始化：将class中的各类静态成员加载至内存中并赋值；</p>\n</li>\n<li><p>使用：对类进行实例化(普通成员初始化、实例构造、成员赋值)及引用；</p>\n</li>\n<li><p>卸载：通过GC对已无引用对象进行资源回收；</p>\n</li>\n</ul>\n<h2 id=\"类加载器\"><a href=\"#类加载器\" class=\"headerlink\" title=\"类加载器\"></a>类加载器</h2><p>JDK 默认提供了如下几种ClassLoader：</p>\n<ul>\n<li><strong>Bootstrap loader</strong>：Bootstrap加载器是用C++语言写的，它是在Java虚拟机启动后初始化的，它主要负责加载%JAVA_HOME%/jre/lib,-Xbootclasspath参数指定的路径以及%JAVA_HOME%/jre/classes中的类。</li>\n<li><strong>ExtClassLoader</strong>：Bootstrp loader加载ExtClassLoader,并且将ExtClassLoader的父加载器设置为Bootstrp loader.ExtClassLoader是用Java写的，具体来说就是 sun.misc.Launcher$ExtClassLoader，ExtClassLoader主要加载%JAVA_HOME%/jre/lib/ext，此路径下的所有classes目录以及java.ext.dirs系统变量指定的路径中类库。</li>\n<li><strong>AppClassLoader</strong>：Bootstrp loader加载完ExtClassLoader后，就会加载AppClassLoader,并且将AppClassLoader的父加载器指定为 ExtClassLoader。AppClassLoader也是用Java写成的，它的实现类是 sun.misc.Launcher$AppClassLoader，另外我们知道ClassLoader中有个getSystemClassLoader方法,此方法返回的正是AppclassLoader.AppClassLoader主要负责加载classpath所指定的位置的类或者是jar文档，<strong>它也是Java程序默认的类加载器</strong>。</li>\n<li><strong>User-Defined Class Loader</strong>：用户自定义加载器 自己定义从哪里加载类的二进制流；定义自己的加载器步骤为：<ul>\n<li>继承java.lang.ClassLoader</li>\n<li>重写父类findClass方法（<em>因为JDK已经在loadClass方法中帮我们实现了ClassLoader搜索类的算法，当在loadClass方法中搜索不到类时，loadClass方法就会调用findClass方法来搜索类，所以我们只需重写该方法即可。如没有特殊的要求，一般不建议重写loadClass搜索类的算法。</em>）；<br><img src=\"media/15626768196365/15632617342292.jpg\"></li>\n</ul>\n</li>\n</ul>\n<p>java采用了委托模型(双亲委托模型)机制，这个机制简单来讲，就是“类装载器有载入类的需求时，会先请示其Parent使用其搜索路径帮忙载入，如果Parent 找不到,那么才由自己依照自己的搜索路径搜索类”</p>\n<p>每一个层次的类加载器都是如此。因此，所有的加载请求最终都应该传送到顶层的启动类加载器中。</p>\n<p>只有当父加载器反馈自己无法完成这个加载请求时（搜索范围中没有找到所需的类），子加载器才会尝试自己去加载。</p>\n<p>对于任意一个类，都需要由加载它的类加载器和这个类本身一同确立其在虚拟机中的唯一性，每一个类加载器，都拥有一个独立的类名称空间。因此，使用双亲委派模型来组织类加载器之间的关系，有一个显而易见的好处：类随着它的类加载器一起具备了一种带有优先级的层次关系。</p>\n<h2 id=\"类加载与初始化顺序\"><a href=\"#类加载与初始化顺序\" class=\"headerlink\" title=\"类加载与初始化顺序\"></a>类加载与初始化顺序</h2><p>Java类加载机制中最重要的就是程序初始化过程，其中包含了静态资源，非静态资源，父类子类，构造方法之间的执行顺序；</p>\n<ul>\n<li><strong>常规顺序</strong>：父类的静态代码块-&gt;子类的静态代码块-&gt;初始化父类的属性值/父类的普通代码块(自上而下的顺序排列)-&gt;父类的构造方法-&gt;初始化子类的属性值/子类的普通代码块(自上而下的顺序排列)-&gt;子类的构造方法。</li>\n<li><strong>特殊情况</strong>：<ul>\n<li>当类中显示创建静态类对象且构造器中包含对静态变量赋值，此时静态对象与静态变量赋值顺序将决定最终结果的产生；</li>\n<li>静态成员变量和静态代码块只有在类被调用时才会初始化；</li>\n<li>静态内部类只有被外部类调用时才会初始化；</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//先赋值然后自增，结果返回为2和3</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> value1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> value2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1</span> st1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">private</span>  <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        value1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        value2<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> st1<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton2</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//实例化时静态变量尚未赋值，默认值为0，自增后被后续变量赋值覆盖结果返回为1和2</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton2</span> st2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> value1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> value2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">private</span>  <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        value1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        value2<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>    \n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton2</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> st2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonDemo</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//value1=1 value2=2</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Singleton value1:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">.</span>value1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Singleton value2:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">.</span>value2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//value1=11 value2=12</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Singleton2 value1:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">.</span>value1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Singleton2 value2:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">.</span>value2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"主动引用立即对类进行加载的5中情况：\"><a href=\"#主动引用立即对类进行加载的5中情况：\" class=\"headerlink\" title=\"主动引用立即对类进行加载的5中情况：\"></a>主动引用立即对类进行加载的5中情况：</h2><ol>\n<li>使用new关键字初始化对象、读取或设置static字段、调用类的静态方法；</li>\n<li>使用java.lang.reflect对类进行反射调用时，如果类没有初始化，需先初始化</li>\n<li>初始化子类时，父类未初始化，需先初始化父类；</li>\n<li>虚拟机启动时，会先初始化用户指定主类；</li>\n<li>jdk1.7的动态语言支持，java.lang.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄，且该方法归属类未实例化，需先触发其实例化；</li>\n</ol>\n<h2 id=\"被动引用不触发初始化三种情况\"><a href=\"#被动引用不触发初始化三种情况\" class=\"headerlink\" title=\"被动引用不触发初始化三种情况\"></a>被动引用不触发初始化三种情况</h2><ol>\n<li><p>子类引用父类静态成员，不会触发子类初始化；</p>\n</li>\n<li><p>通过数组定义来引用类，不会触发类实例化；</p>\n</li>\n<li><p>引用其他类常量不会触发本类实例化；</p>\n<p>​      </p>\n</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckljiguap0009facs2y75932o","category_id":"ckljiguah0004facs92qx6cut","_id":"ckljigub1000hfacsemkhhszb"},{"post_id":"ckljigua50001facs9jbtbsv5","category_id":"ckljiguah0004facs92qx6cut","_id":"ckljigub3000lfacs4a1v6jin"},{"post_id":"ckljiguas000bfacsgm7g498g","category_id":"ckljiguah0004facs92qx6cut","_id":"ckljigub4000nfacsbhgmf9c9"},{"post_id":"ckljiguay000ffacs9ykx7wcw","category_id":"ckljiguah0004facs92qx6cut","_id":"ckljigub4000pfacs96pp0wid"},{"post_id":"ckljiguad0003facs8epza1gz","category_id":"ckljiguah0004facs92qx6cut","_id":"ckljigub5000rfacs75zfh99y"},{"post_id":"ckljiguam0007facsdbad4yti","category_id":"ckljiguah0004facs92qx6cut","_id":"ckljigub5000sfacs6yuqgefu"}],"PostTag":[{"post_id":"ckljiguap0009facs2y75932o","tag_id":"ckljiguak0005facs8tlb0tue","_id":"ckljiguay000efacsar86clos"},{"post_id":"ckljigua50001facs9jbtbsv5","tag_id":"ckljiguak0005facs8tlb0tue","_id":"ckljigub0000gfacsbjnw1oh8"},{"post_id":"ckljiguas000bfacsgm7g498g","tag_id":"ckljiguak0005facs8tlb0tue","_id":"ckljigub3000kfacs7f0r6ga7"},{"post_id":"ckljiguay000ffacs9ykx7wcw","tag_id":"ckljiguak0005facs8tlb0tue","_id":"ckljigub4000mfacs0f21ahj1"},{"post_id":"ckljiguad0003facs8epza1gz","tag_id":"ckljiguak0005facs8tlb0tue","_id":"ckljigub4000ofacsgrko0i9m"},{"post_id":"ckljiguam0007facsdbad4yti","tag_id":"ckljiguak0005facs8tlb0tue","_id":"ckljigub5000qfacs7fc2ehaz"}],"Tag":[{"name":"Java","_id":"ckljiguak0005facs8tlb0tue"}]}}